<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://zzuzyj.github.io/atom.xml" rel="self"/>
  
  <link href="http://zzuzyj.github.io/"/>
  <updated>2022-04-21T13:32:32.571Z</updated>
  <id>http://zzuzyj.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>web21-28</title>
    <link href="http://zzuzyj.github.io/2022/04/21/web21-28/"/>
    <id>http://zzuzyj.github.io/2022/04/21/web21-28/</id>
    <published>2022-04-21T09:32:17.916Z</published>
    <updated>2022-04-21T13:32:32.571Z</updated>
    
    <content type="html"><![CDATA[<h2 id="web21"><a href="#web21" class="headerlink" title="web21"></a>web21</h2><p>拿到题目给的字典，抓一下包</p><p><img src="http://zzuzyj.github.io/2022/04/21/web21-28/1650540592603.png" alt="1650540592603"></p><p>看的群主大大的wp，太菜了，这里一定不要打对号</p><p>爆破的到</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;web21&quot;&gt;&lt;a href=&quot;#web21&quot; class=&quot;headerlink&quot; title=&quot;web21&quot;&gt;&lt;/a&gt;web21&lt;/h2&gt;&lt;p&gt;拿到题目给的字典，抓一下包&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://zzuzyj.github.io/202</summary>
      
    
    
    
    <category term="web" scheme="http://zzuzyj.github.io/categories/web/"/>
    
    
    <category term="-web -密码爆破 -ctfshow" scheme="http://zzuzyj.github.io/tags/web-%E5%AF%86%E7%A0%81%E7%88%86%E7%A0%B4-ctfshow/"/>
    
  </entry>
  
  <entry>
    <title>numpylearn</title>
    <link href="http://zzuzyj.github.io/2022/04/20/numpylearn/"/>
    <id>http://zzuzyj.github.io/2022/04/20/numpylearn/</id>
    <published>2022-04-20T12:34:41.641Z</published>
    <updated>2022-04-21T13:32:24.643Z</updated>
    
    <content type="html"><![CDATA[<h1 id="numpy"><a href="#numpy" class="headerlink" title="numpy"></a>numpy</h1><h2 id="初识数组"><a href="#初识数组" class="headerlink" title="初识数组"></a>初识数组</h2><h3 id="array"><a href="#array" class="headerlink" title="array()"></a>array()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">ls=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>]</span><br><span class="line">a=np.array(ls)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="comment"># [1 2 3 4 5 6 7 8]</span></span><br></pre></td></tr></table></figure><h2 id="认识类型"><a href="#认识类型" class="headerlink" title="认识类型"></a>认识类型</h2><h3 id="dtype"><a href="#dtype" class="headerlink" title="dtype"></a>dtype</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</span></span><br><span class="line">a =np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>],dtype=np.<span class="built_in">bool</span>)</span><br><span class="line">b =np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>],dtype=np.int8)</span><br><span class="line">c =np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>],dtype=np.uint8)</span><br><span class="line">d =np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>],dtype=np.float16)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a,a.dtype)</span><br><span class="line"><span class="built_in">print</span>(b,b.dtype)</span><br><span class="line"><span class="built_in">print</span>(c,c.dtype)</span><br><span class="line"><span class="built_in">print</span>(d,d.dtype) </span><br><span class="line"><span class="comment">#[False  True  True  True  True  True  True  True  True  True] bool</span></span><br><span class="line"><span class="comment">#[0 1 2 3 4 5 6 7 8 9] int8</span></span><br><span class="line"><span class="comment">#[0 1 2 3 4 5 6 7 8 9] uint8</span></span><br><span class="line"><span class="comment">#[0. 1. 2. 3. 4. 5. 6. 7. 8. 9.] float16</span></span><br></pre></td></tr></table></figure><h2 id="查询属性"><a href="#查询属性" class="headerlink" title="查询属性"></a>查询属性</h2><div class="table-container"><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>.dtype</td><td>数组元素的数据类型</td></tr><tr><td>.ndim</td><td>数组的维度的个数</td></tr><tr><td>.shape</td><td>数组的形状</td></tr><tr><td>.size</td><td>数组元素的总数</td></tr><tr><td>.itemsize</td><td>数组中的每个元素的字节大小</td></tr></tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">a = np.array([</span><br><span class="line">    [<span class="number">4.8</span>, <span class="number">6</span>], [<span class="number">4.38</span>, <span class="number">5.5</span>], [<span class="number">4.45</span>, <span class="number">6</span>], [<span class="number">9.5</span>, <span class="number">12.8</span>],</span><br><span class="line">    [<span class="number">3.5</span>, <span class="number">5.5</span>], [<span class="number">3.5</span>, <span class="number">5.5</span>], [<span class="number">9.5</span>, <span class="number">12.8</span>], [<span class="number">1.875</span>, <span class="number">2.3</span>],</span><br><span class="line">    [<span class="number">1.875</span>, <span class="number">2.3</span>], [<span class="number">1.875</span>, <span class="number">2.3</span>], [<span class="number">4.38</span>, <span class="number">5.5</span>], [<span class="number">4.4</span>, <span class="number">5.5</span>],</span><br><span class="line">    [<span class="number">4.4</span>, <span class="number">5.5</span>], [<span class="number">4.4</span>, <span class="number">5.5</span>], [<span class="number">4.45</span>, <span class="number">6</span>], [<span class="number">4.45</span>, <span class="number">6</span>], [<span class="number">4.45</span>, <span class="number">6</span>], ])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;类型：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(a.dtype))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;维度：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(a.ndim))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;形状：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(a.shape))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;元素总数：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(a.size))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;元素字节大小：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(a.itemsize))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;数组所占内存空间：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(a.size*a.itemsize))</span><br><span class="line"><span class="comment"># 类型：float64</span></span><br><span class="line"><span class="comment"># 维度：2</span></span><br><span class="line"><span class="comment"># 形状：(17, 2)</span></span><br><span class="line"><span class="comment"># 元素总数：34</span></span><br><span class="line"><span class="comment"># 元素字节大小：8</span></span><br><span class="line"><span class="comment"># 数组所占内存空间：272</span></span><br></pre></td></tr></table></figure><h2 id="初始赋值"><a href="#初始赋值" class="headerlink" title="初始赋值"></a>初始赋值</h2><div class="table-container"><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>np.arange()</td><td>类似range()函数</td></tr><tr><td>np.ones(shape)</td><td>根据shape生成一个全一的数组，shape是一个元组</td></tr><tr><td>np.zeros(shape)</td><td>根据shape生成一个全0数组，shape是一个元组</td></tr><tr><td>np.linspace()</td><td>根据气质数据等间距地填充数据，形成数组</td></tr><tr><td>np.concatetenate()</td><td>将两个或多个数组合并成一个新的数组</td></tr><tr><td>np.full(shape,val)</td><td>根据shape生成一个全为val的数组</td></tr><tr><td>np.eye(n)</td><td>创建一个n*n的矩阵，对角线为1,其余为0</td></tr><tr><td>np.ones_like(a)</td><td>根据a的形状生成一个全为1的数组</td></tr><tr><td>np.zeros_like(a)</td><td>根据a的形状生成一个全为0的数组</td></tr><tr><td>np.full_like(a,val)</td><td>根据a的形状生成一个全为val的数组</td></tr></tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">a = np.arange(<span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, np.arange(<span class="number">0.1</span>, <span class="number">2.0</span>, <span class="number">0.1</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, np.ones(<span class="number">10</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;------------------------------------------------------------------------------------------&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, np.ones((<span class="number">3</span>, <span class="number">3</span>)))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, np.zeros(<span class="number">8</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;------------------------------------------------------------------------------------------&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, np.linspace(<span class="number">1</span>, <span class="number">2</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, np.linspace(<span class="number">1</span>, <span class="number">2</span>, endpoint=<span class="literal">False</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;------------------------------------------------------------------------------------------&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, np.linspace(<span class="number">1</span>, <span class="number">2</span>, num=<span class="number">5</span>))</span><br><span class="line"></span><br><span class="line">x1 = np.linspace(<span class="number">0</span>, <span class="number">1</span>, num=<span class="number">10</span>)</span><br><span class="line">x2 = np.linspace(<span class="number">1</span>, <span class="number">2</span>, num=<span class="number">10</span>)</span><br><span class="line">y = np.zeros(<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">plt.plot(x1, y, <span class="string">&quot;o&quot;</span>)</span><br><span class="line">plt.plot(x2, y, <span class="string">&quot;o&quot;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="http://zzuzyj.github.io/2022/04/20/numpylearn/1650545098976.png" alt="1650545098976"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">a = np.arange(<span class="number">0</span>, <span class="number">10</span>)</span><br><span class="line">b = np.arange(<span class="number">10</span>, <span class="number">20</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, np.concatenate((a, b)))</span><br><span class="line"></span><br><span class="line">data = np.random.normal(<span class="number">2</span>, <span class="number">0.1</span>, <span class="number">100000</span>)</span><br><span class="line">plt.hist(data, <span class="number">1000</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="http://zzuzyj.github.io/2022/04/20/numpylearn/1650545211924.png" alt="1650545211924"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">data = np.random.beta(<span class="number">2</span>, <span class="number">2</span>, <span class="number">100000</span>)</span><br><span class="line">plt.hist(data, <span class="number">1000</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="http://zzuzyj.github.io/2022/04/20/numpylearn/1650545355513.png" alt="1650545355513"></p><p>等等……</p><h2 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h2><div class="table-container"><table><thead><tr><th>函数</th><th>属性</th></tr></thead><tbody><tr><td>.astype(new_type)</td><td>强制转换数组的数据类型</td></tr><tr><td>.tolist()</td><td>返回数组数据的副本作为（嵌套的）python列表</td></tr></tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">a = np.arange(<span class="number">1</span>, <span class="number">5</span>, <span class="number">0.5</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a.dtype)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a.astype(np.int32))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;------------------------------------------------------------------------------------------&quot;</span>)</span><br><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>], [<span class="number">6</span>, <span class="number">3</span>, <span class="number">4</span>], [<span class="number">5</span>, <span class="number">6</span>, <span class="number">0</span>]])</span><br><span class="line">b = a.tolist()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, b)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, <span class="built_in">type</span>(b))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;------------------------------------------------------------------------------------------&quot;</span>)</span><br><span class="line">a = np.array([<span class="string">&quot;1.2&quot;</span>, <span class="string">&quot;2.4&quot;</span>, <span class="string">&quot;3.1415&quot;</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a.itemsize * a.size)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a.astype(np.float64))</span><br></pre></td></tr></table></figure><h2 id="索引切片"><a href="#索引切片" class="headerlink" title="索引切片"></a>索引切片</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">a = np.arange(<span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a[-<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a[<span class="number">9</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a[<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a[[<span class="number">1</span>, <span class="number">5</span>, <span class="number">2</span>]])</span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [0 1 2 3 4 5 6 7 8 9]</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  9</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  9</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  </span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [1 5 2]</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">a = np.arange(<span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a)</span><br><span class="line">b = [<span class="literal">True</span>, <span class="literal">True</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">True</span>, <span class="literal">True</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a[b])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;------------------------------------------------------------------------------------------&quot;</span>)</span><br><span class="line">a = np.arange(<span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a[<span class="number">1</span>:<span class="number">4</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a[<span class="number">0</span>:<span class="number">6</span>:<span class="number">2</span>])</span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [0 1 2 3 4 5 6 7 8 9]</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [0 1 5 6]</span></span><br><span class="line"><span class="comment"># ------------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [0 1 2 3 4 5 6 7 8 9]</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [1 2 3]</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [0 2 4]</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">a = np.arange(<span class="number">10</span>)</span><br><span class="line">b = a[<span class="number">0</span>:<span class="number">6</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, b)</span><br><span class="line">b[<span class="number">1</span>] = <span class="number">1000</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, b)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;------------------------------------------------------------------------------------------&quot;</span>)</span><br><span class="line">a = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">10</span>))</span><br><span class="line">b = a[<span class="number">0</span>:<span class="number">6</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, b)</span><br><span class="line">b[<span class="number">1</span>] = <span class="number">1000</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, b)</span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [0 1 2 3 4 5 6 7 8 9]</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [0 1 2 3 4 5]</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [   0 1000    2    3    4    5    6    7    8    9]</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [   0 1000    2    3    4    5]</span></span><br><span class="line"><span class="comment"># ------------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [0, 1, 2, 3, 4, 5]</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [0, 1000, 2, 3, 4, 5]</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;numpy&quot;&gt;&lt;a href=&quot;#numpy&quot; class=&quot;headerlink&quot; title=&quot;numpy&quot;&gt;&lt;/a&gt;numpy&lt;/h1&gt;&lt;h2 id=&quot;初识数组&quot;&gt;&lt;a href=&quot;#初识数组&quot; class=&quot;headerlink&quot; title=&quot;初识数组&quot;</summary>
      
    
    
    
    <category term="python" scheme="http://zzuzyj.github.io/categories/python/"/>
    
    
    <category term="numpy" scheme="http://zzuzyj.github.io/tags/numpy/"/>
    
  </entry>
  
  <entry>
    <title>RSA攻击</title>
    <link href="http://zzuzyj.github.io/2022/04/18/RSA/"/>
    <id>http://zzuzyj.github.io/2022/04/18/RSA/</id>
    <published>2022-04-18T12:29:33.706Z</published>
    <updated>2022-04-19T03:01:04.826Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="基础类型，给定p-q-e-c"><a href="#基础类型，给定p-q-e-c" class="headerlink" title="基础类型，给定p,q,e,c"></a>基础类型，给定p,q,e,c</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> libnum <span class="keyword">import</span> *</span><br><span class="line">p=</span><br><span class="line">q=</span><br><span class="line">e=</span><br><span class="line">c=</span><br><span class="line">n=p*q</span><br><span class="line">phi=(p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line">d=invmod(e,phi)</span><br><span class="line">m=<span class="built_in">pow</span>(c,d,n)</span><br><span class="line"><span class="built_in">print</span>(n2s(<span class="built_in">int</span>(m)))</span><br></pre></td></tr></table></figure><h2 id="可直接分解的N（p-q）"><a href="#可直接分解的N（p-q）" class="headerlink" title="可直接分解的N（p,q）"></a>可直接分解的N（p,q）</h2><p>运用yafu分解</p><p>运用网站在线分解 <a href="http://www.factordb.com/">http://www.factordb.com</a> </p><h2 id="小e攻击"><a href="#小e攻击" class="headerlink" title="小e攻击"></a>小e攻击</h2><p>e非常小，可以直接开根拿到m</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> libnum <span class="keyword">import</span> *</span><br><span class="line">k=<span class="number">0</span></span><br><span class="line">e=</span><br><span class="line">c=</span><br><span class="line">n=</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    m=c+n*k</span><br><span class="line">    k+=<span class="number">1</span></span><br><span class="line">    flag=iroot(m,e)</span><br><span class="line">    <span class="keyword">if</span>(flag[<span class="number">0</span>]):</span><br><span class="line">        <span class="built_in">print</span>(n2s(<span class="built_in">int</span>(flag[<span class="number">1</span>])))</span><br></pre></td></tr></table></figure><h2 id="共模攻击（n-m相同，c-e不同）"><a href="#共模攻击（n-m相同，c-e不同）" class="headerlink" title="共模攻击（n,m相同，c,e不同）"></a>共模攻击（n,m相同，c,e不同）</h2><p>n不变，可以根据e1,e2,c1,c2,n可以不求d1,d2直接求解m</p><p> e1,e2互素  gcd(e1,e2)=1</p><script type="math/tex; mode=display">则 e1*s1+e2*s2=1,s1,s2均为整数，s1,s2一正一负，通过gmpy2 的gcdext(e1,e2)可以计算出(s1,s2)\\又 c_1 \equiv m^{e_1} \bmod n,c_2\equiv m^{e_2}\bmod n.\\则(c_1^{s_1}c_2^{s_2})\bmod n = ((m^{e_1}\bmod n)^{s_1}(m^{e_2}\bmod n)^{s_2})\bmod n\\化简 (c_1^{s_1}c_2^{s_2})\bmod n = (m^{e_1s_1+e_2s_2})\bmod n\\又e1*s1+e2*s2=1\\则c_1^{s_1}*c_2^{s_2}=m</script><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> libnum <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">deattack</span>(<span class="params">e1,e2,c1,c2,n</span>):</span><br><span class="line">    g,s1,s2=gcdext(e1,e2)</span><br><span class="line">    <span class="keyword">if</span> s1&lt;<span class="number">0</span>:</span><br><span class="line">        s1=-s1</span><br><span class="line">        c1=invert(c1,n)</span><br><span class="line">    <span class="keyword">if</span> s2&lt;<span class="number">0</span>:</span><br><span class="line">        s2=-s2</span><br><span class="line">        c2=invert(c2,n)</span><br><span class="line">    m=<span class="built_in">pow</span>(c1,s1,n)*<span class="built_in">pow</span>(c2,s2,n)%n</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">int</span>(m)</span><br><span class="line">e1=</span><br><span class="line">e2=</span><br><span class="line">c1=</span><br><span class="line">c2=</span><br><span class="line">n=</span><br><span class="line">flag=deattack(e1,e2,c1,c2,n)</span><br><span class="line"><span class="built_in">print</span>(n2s(flag))</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h2 id=&quot;基础类型，给定p-q-e-c&quot;&gt;&lt;a href=&quot;#基础类型，给定p-q-e-c&quot; class=&quot;headerlink&quot; title=&quot;基础类型，给定p,q,e,c&quot;&gt;&lt;/a&gt;基础类型，给定p,q,e,c&lt;/h2&gt;&lt;figure class=&quot;highl</summary>
      
    
    
    
    <category term="Crypto" scheme="http://zzuzyj.github.io/categories/Crypto/"/>
    
    
    <category term="RSA" scheme="http://zzuzyj.github.io/tags/RSA/"/>
    
  </entry>
  
</feed>
