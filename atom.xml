<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://zzuzyj.github.io/atom.xml" rel="self"/>
  
  <link href="http://zzuzyj.github.io/"/>
  <updated>2022-04-20T13:28:06.337Z</updated>
  <id>http://zzuzyj.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>numpylearn</title>
    <link href="http://zzuzyj.github.io/2022/04/20/numpylearn/"/>
    <id>http://zzuzyj.github.io/2022/04/20/numpylearn/</id>
    <published>2022-04-20T12:34:41.641Z</published>
    <updated>2022-04-20T13:28:06.337Z</updated>
    
    <content type="html"><![CDATA[<h1 id="numpy"><a href="#numpy" class="headerlink" title="numpy"></a>numpy</h1><h2 id="初识数组"><a href="#初识数组" class="headerlink" title="初识数组"></a>初识数组</h2><h3 id="array"><a href="#array" class="headerlink" title="array()"></a>array()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">ls=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>]</span><br><span class="line">a=np.array(ls)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="comment"># [1 2 3 4 5 6 7 8]</span></span><br></pre></td></tr></table></figure><h2 id="认识类型"><a href="#认识类型" class="headerlink" title="认识类型"></a>认识类型</h2><h3 id="dtype"><a href="#dtype" class="headerlink" title="dtype"></a>dtype</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</span></span><br><span class="line">a =np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>],dtype=np.<span class="built_in">bool</span>)</span><br><span class="line">b =np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>],dtype=np.int8)</span><br><span class="line">c =np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>],dtype=np.uint8)</span><br><span class="line">d =np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>],dtype=np.float16)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a,a.dtype)</span><br><span class="line"><span class="built_in">print</span>(b,b.dtype)</span><br><span class="line"><span class="built_in">print</span>(c,c.dtype)</span><br><span class="line"><span class="built_in">print</span>(d,d.dtype) </span><br><span class="line"><span class="comment">#[False  True  True  True  True  True  True  True  True  True] bool</span></span><br><span class="line"><span class="comment">#[0 1 2 3 4 5 6 7 8 9] int8</span></span><br><span class="line"><span class="comment">#[0 1 2 3 4 5 6 7 8 9] uint8</span></span><br><span class="line"><span class="comment">#[0. 1. 2. 3. 4. 5. 6. 7. 8. 9.] float16</span></span><br></pre></td></tr></table></figure><h2 id="查询属性"><a href="#查询属性" class="headerlink" title="查询属性"></a>查询属性</h2><p><img src="http://zzuzyj.github.io/2022/04/20/numpylearn/1650459866111.png" alt="1650459866111"></p><div class="table-container"><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>.dtype</td><td>数组元素的数据类型</td></tr><tr><td>.ndim</td><td>数组的维度的个数</td></tr><tr><td>.shape</td><td>数组的形状</td></tr><tr><td>.size</td><td>数组元素的总数</td></tr><tr><td>.itemsize</td><td>数组中的每个元素的字节大小</td></tr></tbody></table></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;numpy&quot;&gt;&lt;a href=&quot;#numpy&quot; class=&quot;headerlink&quot; title=&quot;numpy&quot;&gt;&lt;/a&gt;numpy&lt;/h1&gt;&lt;h2 id=&quot;初识数组&quot;&gt;&lt;a href=&quot;#初识数组&quot; class=&quot;headerlink&quot; title=&quot;初识数组&quot;</summary>
      
    
    
    
    <category term="python" scheme="http://zzuzyj.github.io/categories/python/"/>
    
    
    <category term="numpy" scheme="http://zzuzyj.github.io/tags/numpy/"/>
    
  </entry>
  
  <entry>
    <title>RSA攻击</title>
    <link href="http://zzuzyj.github.io/2022/04/18/RSA/"/>
    <id>http://zzuzyj.github.io/2022/04/18/RSA/</id>
    <published>2022-04-18T12:29:33.706Z</published>
    <updated>2022-04-19T03:01:04.826Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="基础类型，给定p-q-e-c"><a href="#基础类型，给定p-q-e-c" class="headerlink" title="基础类型，给定p,q,e,c"></a>基础类型，给定p,q,e,c</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> libnum <span class="keyword">import</span> *</span><br><span class="line">p=</span><br><span class="line">q=</span><br><span class="line">e=</span><br><span class="line">c=</span><br><span class="line">n=p*q</span><br><span class="line">phi=(p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line">d=invmod(e,phi)</span><br><span class="line">m=<span class="built_in">pow</span>(c,d,n)</span><br><span class="line"><span class="built_in">print</span>(n2s(<span class="built_in">int</span>(m)))</span><br></pre></td></tr></table></figure><h2 id="可直接分解的N（p-q）"><a href="#可直接分解的N（p-q）" class="headerlink" title="可直接分解的N（p,q）"></a>可直接分解的N（p,q）</h2><p>运用yafu分解</p><p>运用网站在线分解 <a href="http://www.factordb.com/">http://www.factordb.com</a> </p><h2 id="小e攻击"><a href="#小e攻击" class="headerlink" title="小e攻击"></a>小e攻击</h2><p>e非常小，可以直接开根拿到m</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> libnum <span class="keyword">import</span> *</span><br><span class="line">k=<span class="number">0</span></span><br><span class="line">e=</span><br><span class="line">c=</span><br><span class="line">n=</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    m=c+n*k</span><br><span class="line">    k+=<span class="number">1</span></span><br><span class="line">    flag=iroot(m,e)</span><br><span class="line">    <span class="keyword">if</span>(flag[<span class="number">0</span>]):</span><br><span class="line">        <span class="built_in">print</span>(n2s(<span class="built_in">int</span>(flag[<span class="number">1</span>])))</span><br></pre></td></tr></table></figure><h2 id="共模攻击（n-m相同，c-e不同）"><a href="#共模攻击（n-m相同，c-e不同）" class="headerlink" title="共模攻击（n,m相同，c,e不同）"></a>共模攻击（n,m相同，c,e不同）</h2><p>n不变，可以根据e1,e2,c1,c2,n可以不求d1,d2直接求解m</p><p> e1,e2互素  gcd(e1,e2)=1</p><script type="math/tex; mode=display">则 e1*s1+e2*s2=1,s1,s2均为整数，s1,s2一正一负，通过gmpy2 的gcdext(e1,e2)可以计算出(s1,s2)\\又 c_1 \equiv m^{e_1} \bmod n,c_2\equiv m^{e_2}\bmod n.\\则(c_1^{s_1}c_2^{s_2})\bmod n = ((m^{e_1}\bmod n)^{s_1}(m^{e_2}\bmod n)^{s_2})\bmod n\\化简 (c_1^{s_1}c_2^{s_2})\bmod n = (m^{e_1s_1+e_2s_2})\bmod n\\又e1*s1+e2*s2=1\\则c_1^{s_1}*c_2^{s_2}=m</script><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> libnum <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">deattack</span>(<span class="params">e1,e2,c1,c2,n</span>):</span><br><span class="line">    g,s1,s2=gcdext(e1,e2)</span><br><span class="line">    <span class="keyword">if</span> s1&lt;<span class="number">0</span>:</span><br><span class="line">        s1=-s1</span><br><span class="line">        c1=invert(c1,n)</span><br><span class="line">    <span class="keyword">if</span> s2&lt;<span class="number">0</span>:</span><br><span class="line">        s2=-s2</span><br><span class="line">        c2=invert(c2,n)</span><br><span class="line">    m=<span class="built_in">pow</span>(c1,s1,n)*<span class="built_in">pow</span>(c2,s2,n)%n</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">int</span>(m)</span><br><span class="line">e1=</span><br><span class="line">e2=</span><br><span class="line">c1=</span><br><span class="line">c2=</span><br><span class="line">n=</span><br><span class="line">flag=deattack(e1,e2,c1,c2,n)</span><br><span class="line"><span class="built_in">print</span>(n2s(flag))</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;h2 id=&quot;基础类型，给定p-q-e-c&quot;&gt;&lt;a href=&quot;#基础类型，给定p-q-e-c&quot; class=&quot;headerlink&quot; title=&quot;基础类型，给定p,q,e,c&quot;&gt;&lt;/a&gt;基础类型，给定p,q,e,c&lt;/h2&gt;&lt;figure class=&quot;highl</summary>
      
    
    
    
    <category term="Crypto" scheme="http://zzuzyj.github.io/categories/Crypto/"/>
    
    
    <category term="RSA" scheme="http://zzuzyj.github.io/tags/RSA/"/>
    
  </entry>
  
</feed>
